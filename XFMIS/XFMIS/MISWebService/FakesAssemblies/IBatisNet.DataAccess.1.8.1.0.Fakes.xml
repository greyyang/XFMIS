<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IBatisNet.DataAccess.1.8.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDao">
            <summary>IBatisNet.DataAccess.Configuration.Dao 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.#ctor(IBatisNet.DataAccess.Configuration.Dao)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.Constructor">
            <summary>设置 Dao.Dao() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.DaoImplementationGet">
            <summary>设置 Dao.get_DaoImplementation() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.DaoInstanceGet">
            <summary>设置 Dao.get_DaoInstance() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.DaoInterfaceGet">
            <summary>设置 Dao.get_DaoInterface() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.DaoManagerGet">
            <summary>设置 Dao.get_DaoManager() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.ImplementationGet">
            <summary>设置 Dao.get_Implementation() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.ImplementationSetString">
            <summary>设置 Dao.set_Implementation(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.InitializeDaoManager">
            <summary>设置 Dao.Initialize(DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.InterfaceGet">
            <summary>设置 Dao.get_Interface() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.InterfaceSetString">
            <summary>设置 Dao.set_Interface(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.ProxyGet">
            <summary>设置 Dao.get_Proxy() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.DaoImplementationGet">
            <summary>设置 Dao.get_DaoImplementation() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.DaoInstanceGet">
            <summary>设置 Dao.get_DaoInstance() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.DaoInterfaceGet">
            <summary>设置 Dao.get_DaoInterface() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.DaoManagerGet">
            <summary>设置 Dao.get_DaoManager() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.ImplementationGet">
            <summary>设置 Dao.get_Implementation() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.ImplementationSetString">
            <summary>设置 Dao.set_Implementation(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.InitializeDaoManager">
            <summary>设置 Dao.Initialize(DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.InterfaceGet">
            <summary>设置 Dao.get_Interface() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.InterfaceSetString">
            <summary>设置 Dao.set_Interface(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDao.AllInstances.ProxyGet">
            <summary>设置 Dao.get_Proxy() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy">
            <summary>IBatisNet.DataAccess.Configuration.DaoProxy 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.#ctor(IBatisNet.DataAccess.Configuration.DaoProxy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.Bind(Castle.DynamicProxy.IInterceptor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.ConstructorDao">
            <summary>设置 DaoProxy.DaoProxy(Dao dao) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.InterceptIInvocationObjectArray">
            <summary>设置 DaoProxy.Intercept(IInvocation invocation, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.NewInstanceDao">
            <summary>设置 DaoProxy.NewInstance(Dao dao) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.StaticConstructor">
            <summary>设置 DaoProxy.DaoProxy() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.UnWrapExceptionExceptionString">
            <summary>设置 DaoProxy.UnWrapException(Exception ex, String methodName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.AllInstances.InterceptIInvocationObjectArray">
            <summary>设置 DaoProxy.Intercept(IInvocation invocation, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoProxy.AllInstances.UnWrapExceptionExceptionString">
            <summary>设置 DaoProxy.UnWrapException(Exception ex, String methodName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler">
            <summary>IBatisNet.DataAccess.Configuration.DaoSessionHandler 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.#ctor(IBatisNet.DataAccess.Configuration.DaoSessionHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.Constructor">
            <summary>设置 DaoSessionHandler.DaoSessionHandler() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.ConstructorStringString">
            <summary>设置 DaoSessionHandler.DaoSessionHandler(String name, String implementation) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.ImplementationGet">
            <summary>设置 DaoSessionHandler.get_Implementation() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.ImplementationSetString">
            <summary>设置 DaoSessionHandler.set_Implementation(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.IsDefaultGet">
            <summary>设置 DaoSessionHandler.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.IsDefaultSetBoolean">
            <summary>设置 DaoSessionHandler.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.NameGet">
            <summary>设置 DaoSessionHandler.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.NameSetString">
            <summary>设置 DaoSessionHandler.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.TypeInstanceGet">
            <summary>设置 DaoSessionHandler.get_TypeInstance() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances.ImplementationGet">
            <summary>设置 DaoSessionHandler.get_Implementation() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances.ImplementationSetString">
            <summary>设置 DaoSessionHandler.set_Implementation(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances.IsDefaultGet">
            <summary>设置 DaoSessionHandler.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances.IsDefaultSetBoolean">
            <summary>设置 DaoSessionHandler.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances.NameGet">
            <summary>设置 DaoSessionHandler.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances.NameSetString">
            <summary>设置 DaoSessionHandler.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDaoSessionHandler.AllInstances.TypeInstanceGet">
            <summary>设置 DaoSessionHandler.get_TypeInstance() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder">
            <summary>IBatisNet.DataAccess.Configuration.DomDaoManagerBuilder 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.#ctor(IBatisNet.DataAccess.Configuration.DomDaoManagerBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ApplyNamespacePrefixString">
            <summary>设置 DomDaoManagerBuilder.ApplyNamespacePrefix(String elementName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ApplyProviderNamespacePrefixString">
            <summary>设置 DomDaoManagerBuilder.ApplyProviderNamespacePrefix(String elementName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.BuildDaoManagersXmlDocumentBoolean">
            <summary>设置 DomDaoManagerBuilder.BuildDaoManagers(XmlDocument document, Boolean useConfigFileWatcher) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.Configure">
            <summary>设置 DomDaoManagerBuilder.Configure() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureAndWatchConfigureHandler">
            <summary>设置 DomDaoManagerBuilder.ConfigureAndWatch(ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureAndWatchFileInfoConfigureHandler">
            <summary>设置 DomDaoManagerBuilder.ConfigureAndWatch(FileInfo resource, ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureAndWatchStringConfigureHandler">
            <summary>设置 DomDaoManagerBuilder.ConfigureAndWatch(String resource, ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureFileInfo">
            <summary>设置 DomDaoManagerBuilder.Configure(FileInfo resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureStream">
            <summary>设置 DomDaoManagerBuilder.Configure(Stream resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureString">
            <summary>设置 DomDaoManagerBuilder.Configure(String resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureUri">
            <summary>设置 DomDaoManagerBuilder.Configure(Uri resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ConfigureXmlDocument">
            <summary>设置 DomDaoManagerBuilder.Configure(XmlDocument document) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.Constructor">
            <summary>设置 DomDaoManagerBuilder.DomDaoManagerBuilder() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.GetConfigConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetConfig(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.GetContextsConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetContexts(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.GetDaoSessionHandlersConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetDaoSessionHandlers(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.GetProvidersConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetProviders(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.OnConfigFileChangeObject">
            <summary>设置 DomDaoManagerBuilder.OnConfigFileChange(Object obj) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ParseDaoFactoryConfigurationScopeDaoManager">
            <summary>设置 DomDaoManagerBuilder.ParseDaoFactory(ConfigurationScope configurationScope, DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ParseDataSourceConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.ParseDataSource(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ParseGlobalPropertiesConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.ParseGlobalProperties(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.ParseProviderConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.ParseProvider(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.StaticConstructor">
            <summary>设置 DomDaoManagerBuilder.DomDaoManagerBuilder() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ApplyNamespacePrefixString">
            <summary>设置 DomDaoManagerBuilder.ApplyNamespacePrefix(String elementName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ApplyProviderNamespacePrefixString">
            <summary>设置 DomDaoManagerBuilder.ApplyProviderNamespacePrefix(String elementName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.BuildDaoManagersXmlDocumentBoolean">
            <summary>设置 DomDaoManagerBuilder.BuildDaoManagers(XmlDocument document, Boolean useConfigFileWatcher) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.Configure">
            <summary>设置 DomDaoManagerBuilder.Configure() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureAndWatchConfigureHandler">
            <summary>设置 DomDaoManagerBuilder.ConfigureAndWatch(ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureAndWatchFileInfoConfigureHandler">
            <summary>设置 DomDaoManagerBuilder.ConfigureAndWatch(FileInfo resource, ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureAndWatchStringConfigureHandler">
            <summary>设置 DomDaoManagerBuilder.ConfigureAndWatch(String resource, ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureFileInfo">
            <summary>设置 DomDaoManagerBuilder.Configure(FileInfo resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureStream">
            <summary>设置 DomDaoManagerBuilder.Configure(Stream resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureString">
            <summary>设置 DomDaoManagerBuilder.Configure(String resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureUri">
            <summary>设置 DomDaoManagerBuilder.Configure(Uri resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ConfigureXmlDocument">
            <summary>设置 DomDaoManagerBuilder.Configure(XmlDocument document) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.GetConfigConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetConfig(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.GetContextsConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetContexts(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.GetDaoSessionHandlersConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetDaoSessionHandlers(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.GetProvidersConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.GetProviders(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ParseDaoFactoryConfigurationScopeDaoManager">
            <summary>设置 DomDaoManagerBuilder.ParseDaoFactory(ConfigurationScope configurationScope, DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ParseDataSourceConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.ParseDataSource(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ParseGlobalPropertiesConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.ParseGlobalProperties(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.ShimDomDaoManagerBuilder.AllInstances.ParseProviderConfigurationScope">
            <summary>设置 DomDaoManagerBuilder.ParseProvider(ConfigurationScope configurationScope) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.StubDao">
            <summary>IBatisNet.DataAccess.Configuration.Dao 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDao.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDao.InitializeStub">
            <summary>初始化 type StubDao 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDao.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDao.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDao.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.StubDaoProxy">
            <summary>IBatisNet.DataAccess.Configuration.DaoProxy 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDaoProxy.#ctor(IBatisNet.DataAccess.Configuration.Dao)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDaoProxy.InitializeStub">
            <summary>初始化 type StubDaoProxy 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDaoProxy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDaoProxy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDaoProxy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.StubDaoSessionHandler">
            <summary>IBatisNet.DataAccess.Configuration.DaoSessionHandler 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDaoSessionHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDaoSessionHandler.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDaoSessionHandler.InitializeStub">
            <summary>初始化 type StubDaoSessionHandler 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDaoSessionHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDaoSessionHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDaoSessionHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Fakes.StubDomDaoManagerBuilder">
            <summary>IBatisNet.DataAccess.Configuration.DomDaoManagerBuilder 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDomDaoManagerBuilder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Fakes.StubDomDaoManagerBuilder.InitializeStub">
            <summary>初始化 type StubDomDaoManagerBuilder 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDomDaoManagerBuilder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDomDaoManagerBuilder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Fakes.StubDomDaoManagerBuilder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer">
            <summary>IBatisNet.DataAccess.Configuration.Serializers.DaoDeSerializer 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.#ctor(IBatisNet.DataAccess.Configuration.Serializers.DaoDeSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.Constructor">
            <summary>设置 DaoDeSerializer.DaoDeSerializer() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.DeserializeXmlNodeConfigurationScope">
            <summary>设置 DaoDeSerializer.Deserialize(XmlNode node, ConfigurationScope configScope) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoDeSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer">
            <summary>IBatisNet.DataAccess.Configuration.Serializers.DaoSessionHandlerDeSerializer 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.#ctor(IBatisNet.DataAccess.Configuration.Serializers.DaoSessionHandlerDeSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.Constructor">
            <summary>设置 DaoSessionHandlerDeSerializer.DaoSessionHandlerDeSerializer() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.DeserializeXmlNodeConfigurationScope">
            <summary>设置 DaoSessionHandlerDeSerializer.Deserialize(XmlNode node, ConfigurationScope configScope) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Serializers.Fakes.ShimDaoSessionHandlerDeSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoDeSerializer">
            <summary>IBatisNet.DataAccess.Configuration.Serializers.DaoDeSerializer 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoDeSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoDeSerializer.InitializeStub">
            <summary>初始化 type StubDaoDeSerializer 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoDeSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoDeSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoDeSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoSessionHandlerDeSerializer">
            <summary>IBatisNet.DataAccess.Configuration.Serializers.DaoSessionHandlerDeSerializer 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoSessionHandlerDeSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoSessionHandlerDeSerializer.InitializeStub">
            <summary>初始化 type StubDaoSessionHandlerDeSerializer 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoSessionHandlerDeSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoSessionHandlerDeSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Configuration.Serializers.Fakes.StubDaoSessionHandlerDeSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SimpleDaoSession 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.#ctor(IBatisNet.DataAccess.DaoSessionHandlers.SimpleDaoSession)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.Bind(IBatisNet.Common.IDalSession)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BeginTransaction">
            <summary>设置 SimpleDaoSession.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BeginTransactionBoolean">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BeginTransactionBooleanIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BeginTransactionIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BeginTransactionString">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.BeginTransactionStringIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.CloseConnection">
            <summary>设置 SimpleDaoSession.CloseConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.CommitTransaction">
            <summary>设置 SimpleDaoSession.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.CommitTransactionBoolean">
            <summary>设置 SimpleDaoSession.CommitTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.Complete">
            <summary>设置 SimpleDaoSession.Complete() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.ConnectionGet">
            <summary>设置 SimpleDaoSession.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.ConsistentSetBoolean">
            <summary>设置 SimpleDaoSession.set_Consistent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.ConstructorDaoManagerDataSource">
            <summary>设置 SimpleDaoSession.SimpleDaoSession(DaoManager daoManager, DataSource dataSource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.CreateCommandCommandType">
            <summary>设置 SimpleDaoSession.CreateCommand(CommandType commandType) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.CreateDataAdapter">
            <summary>设置 SimpleDaoSession.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.CreateDataAdapterIDbCommand">
            <summary>设置 SimpleDaoSession.CreateDataAdapter(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.CreateDataParameter">
            <summary>设置 SimpleDaoSession.CreateDataParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.DataSourceGet">
            <summary>设置 SimpleDaoSession.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.Dispose">
            <summary>设置 SimpleDaoSession.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.OpenConnection">
            <summary>设置 SimpleDaoSession.OpenConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.OpenConnectionString">
            <summary>设置 SimpleDaoSession.OpenConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.RollBackTransaction">
            <summary>设置 SimpleDaoSession.RollBackTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.RollBackTransactionBoolean">
            <summary>设置 SimpleDaoSession.RollBackTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.StaticConstructor">
            <summary>设置 SimpleDaoSession.SimpleDaoSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.TransactionGet">
            <summary>设置 SimpleDaoSession.get_Transaction() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.BeginTransaction">
            <summary>设置 SimpleDaoSession.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.BeginTransactionBoolean">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.BeginTransactionBooleanIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.BeginTransactionIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.BeginTransactionString">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.BeginTransactionStringIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.CloseConnection">
            <summary>设置 SimpleDaoSession.CloseConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.CommitTransaction">
            <summary>设置 SimpleDaoSession.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.CommitTransactionBoolean">
            <summary>设置 SimpleDaoSession.CommitTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.Complete">
            <summary>设置 SimpleDaoSession.Complete() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.ConnectionGet">
            <summary>设置 SimpleDaoSession.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.ConsistentSetBoolean">
            <summary>设置 SimpleDaoSession.set_Consistent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.CreateCommandCommandType">
            <summary>设置 SimpleDaoSession.CreateCommand(CommandType commandType) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.CreateDataAdapter">
            <summary>设置 SimpleDaoSession.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.CreateDataAdapterIDbCommand">
            <summary>设置 SimpleDaoSession.CreateDataAdapter(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.CreateDataParameter">
            <summary>设置 SimpleDaoSession.CreateDataParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.DataSourceGet">
            <summary>设置 SimpleDaoSession.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.Dispose">
            <summary>设置 SimpleDaoSession.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.OpenConnection">
            <summary>设置 SimpleDaoSession.OpenConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.OpenConnectionString">
            <summary>设置 SimpleDaoSession.OpenConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.RollBackTransaction">
            <summary>设置 SimpleDaoSession.RollBackTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.RollBackTransactionBoolean">
            <summary>设置 SimpleDaoSession.RollBackTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSession.AllInstances.TransactionGet">
            <summary>设置 SimpleDaoSession.get_Transaction() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SimpleDaoSessionHandler 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.#ctor(IBatisNet.DataAccess.DaoSessionHandlers.SimpleDaoSessionHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.Bind(IBatisNet.DataAccess.Interfaces.IDaoSessionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.ConfigureNameValueCollectionIDictionary">
            <summary>设置 SimpleDaoSessionHandler.Configure(NameValueCollection properties, IDictionary resources) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.Constructor">
            <summary>设置 SimpleDaoSessionHandler.SimpleDaoSessionHandler() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.GetDaoSessionDaoManager">
            <summary>设置 SimpleDaoSessionHandler.GetDaoSession(DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.AllInstances.ConfigureNameValueCollectionIDictionary">
            <summary>设置 SimpleDaoSessionHandler.Configure(NameValueCollection properties, IDictionary resources) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSimpleDaoSessionHandler.AllInstances.GetDaoSessionDaoManager">
            <summary>设置 SimpleDaoSessionHandler.GetDaoSession(DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SqlMapDaoSession 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.#ctor(IBatisNet.DataAccess.DaoSessionHandlers.SqlMapDaoSession)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.Bind(IBatisNet.Common.IDalSession)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BeginTransaction">
            <summary>设置 SqlMapDaoSession.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BeginTransactionBoolean">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BeginTransactionBooleanIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BeginTransactionIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BeginTransactionString">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.BeginTransactionStringIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.CloseConnection">
            <summary>设置 SqlMapDaoSession.CloseConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.CommitTransaction">
            <summary>设置 SqlMapDaoSession.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.CommitTransactionBoolean">
            <summary>设置 SqlMapDaoSession.CommitTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.Complete">
            <summary>设置 SqlMapDaoSession.Complete() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.ConnectionGet">
            <summary>设置 SqlMapDaoSession.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.ConstructorDaoManagerISqlMapper">
            <summary>设置 SqlMapDaoSession.SqlMapDaoSession(DaoManager daoManager, ISqlMapper sqlMap) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.CreateCommandCommandType">
            <summary>设置 SqlMapDaoSession.CreateCommand(CommandType commandType) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.CreateDataAdapter">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.CreateDataAdapterIDbCommand">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.CreateDataParameter">
            <summary>设置 SqlMapDaoSession.CreateDataParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.DataSourceGet">
            <summary>设置 SqlMapDaoSession.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.Dispose">
            <summary>设置 SqlMapDaoSession.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.OpenConnection">
            <summary>设置 SqlMapDaoSession.OpenConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.OpenConnectionString">
            <summary>设置 SqlMapDaoSession.OpenConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.RollBackTransaction">
            <summary>设置 SqlMapDaoSession.RollBackTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.RollBackTransactionBoolean">
            <summary>设置 SqlMapDaoSession.RollBackTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.SqlMapGet">
            <summary>设置 SqlMapDaoSession.get_SqlMap() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.TransactionGet">
            <summary>设置 SqlMapDaoSession.get_Transaction() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.BeginTransaction">
            <summary>设置 SqlMapDaoSession.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.BeginTransactionBoolean">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.BeginTransactionBooleanIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.BeginTransactionIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.BeginTransactionString">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.BeginTransactionStringIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.CloseConnection">
            <summary>设置 SqlMapDaoSession.CloseConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.CommitTransaction">
            <summary>设置 SqlMapDaoSession.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.CommitTransactionBoolean">
            <summary>设置 SqlMapDaoSession.CommitTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.Complete">
            <summary>设置 SqlMapDaoSession.Complete() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.ConnectionGet">
            <summary>设置 SqlMapDaoSession.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.CreateCommandCommandType">
            <summary>设置 SqlMapDaoSession.CreateCommand(CommandType commandType) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.CreateDataAdapter">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.CreateDataAdapterIDbCommand">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter(IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.CreateDataParameter">
            <summary>设置 SqlMapDaoSession.CreateDataParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.DataSourceGet">
            <summary>设置 SqlMapDaoSession.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.Dispose">
            <summary>设置 SqlMapDaoSession.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.OpenConnection">
            <summary>设置 SqlMapDaoSession.OpenConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.OpenConnectionString">
            <summary>设置 SqlMapDaoSession.OpenConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.RollBackTransaction">
            <summary>设置 SqlMapDaoSession.RollBackTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.RollBackTransactionBoolean">
            <summary>设置 SqlMapDaoSession.RollBackTransaction(Boolean closeConnection) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.SqlMapGet">
            <summary>设置 SqlMapDaoSession.get_SqlMap() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSession.AllInstances.TransactionGet">
            <summary>设置 SqlMapDaoSession.get_Transaction() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SqlMapDaoSessionHandler 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.#ctor(IBatisNet.DataAccess.DaoSessionHandlers.SqlMapDaoSessionHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.Bind(IBatisNet.DataAccess.Interfaces.IDaoSessionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.ConfigureNameValueCollectionIDictionary">
            <summary>设置 SqlMapDaoSessionHandler.Configure(NameValueCollection properties, IDictionary resources) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.Constructor">
            <summary>设置 SqlMapDaoSessionHandler.SqlMapDaoSessionHandler() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.GetDaoSessionDaoManager">
            <summary>设置 SqlMapDaoSessionHandler.GetDaoSession(DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.SqlMapGet">
            <summary>设置 SqlMapDaoSessionHandler.get_SqlMap() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.AllInstances.ConfigureNameValueCollectionIDictionary">
            <summary>设置 SqlMapDaoSessionHandler.Configure(NameValueCollection properties, IDictionary resources) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.AllInstances.GetDaoSessionDaoManager">
            <summary>设置 SqlMapDaoSessionHandler.GetDaoSession(DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.ShimSqlMapDaoSessionHandler.AllInstances.SqlMapGet">
            <summary>设置 SqlMapDaoSessionHandler.get_SqlMap() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SimpleDaoSession 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.#ctor(IBatisNet.DataAccess.DaoManager,IBatisNet.Common.DataSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction">
            <summary>设置 SimpleDaoSession.BeginTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>设置 SimpleDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction(System.Boolean)">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction(System.String)">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction(System.String,System.Data.IsolationLevel)">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction(System.String,System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransaction01">
            <summary>设置 SimpleDaoSession.BeginTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransactionBoolean">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransactionBooleanIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransactionIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransactionString">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.BeginTransactionStringIsolationLevel">
            <summary>设置 SimpleDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CloseConnection">
            <summary>设置 SimpleDaoSession.CloseConnection() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CloseConnection01">
            <summary>设置 SimpleDaoSession.CloseConnection() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CommitTransaction">
            <summary>设置 SimpleDaoSession.CommitTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CommitTransaction(System.Boolean)">
            <summary>设置 SimpleDaoSession.CommitTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CommitTransaction01">
            <summary>设置 SimpleDaoSession.CommitTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CommitTransactionBoolean">
            <summary>设置 SimpleDaoSession.CommitTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.Complete">
            <summary>设置 SimpleDaoSession.Complete() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.Complete01">
            <summary>设置 SimpleDaoSession.Complete() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.ConnectionGet">
            <summary>设置 SimpleDaoSession.get_Connection() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateCommand(System.Data.CommandType)">
            <summary>设置 SimpleDaoSession.CreateCommand(CommandType commandType) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateCommandCommandType">
            <summary>设置 SimpleDaoSession.CreateCommand(CommandType commandType) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateDataAdapter">
            <summary>设置 SimpleDaoSession.CreateDataAdapter() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateDataAdapter(System.Data.IDbCommand)">
            <summary>设置 SimpleDaoSession.CreateDataAdapter(IDbCommand command) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateDataAdapter01">
            <summary>设置 SimpleDaoSession.CreateDataAdapter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateDataAdapterIDbCommand">
            <summary>设置 SimpleDaoSession.CreateDataAdapter(IDbCommand command) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateDataParameter">
            <summary>设置 SimpleDaoSession.CreateDataParameter() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CreateDataParameter01">
            <summary>设置 SimpleDaoSession.CreateDataParameter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.DataSourceGet">
            <summary>设置 SimpleDaoSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.Dispose">
            <summary>设置 SimpleDaoSession.Dispose() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.Dispose01">
            <summary>设置 SimpleDaoSession.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.InitializeStub">
            <summary>初始化 type StubSimpleDaoSession 的新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.OpenConnection">
            <summary>设置 SimpleDaoSession.OpenConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.OpenConnection(System.String)">
            <summary>设置 SimpleDaoSession.OpenConnection(String connectionString) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.OpenConnection01">
            <summary>设置 SimpleDaoSession.OpenConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.OpenConnectionString">
            <summary>设置 SimpleDaoSession.OpenConnection(String connectionString) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.RollBackTransaction">
            <summary>设置 SimpleDaoSession.RollBackTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.RollBackTransaction(System.Boolean)">
            <summary>设置 SimpleDaoSession.RollBackTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.RollBackTransaction01">
            <summary>设置 SimpleDaoSession.RollBackTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.RollBackTransactionBoolean">
            <summary>设置 SimpleDaoSession.RollBackTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.TransactionGet">
            <summary>设置 SimpleDaoSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.Connection">
            <summary>设置 SimpleDaoSession.get_Connection() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.DataSource">
            <summary>设置 SimpleDaoSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSession.Transaction">
            <summary>设置 SimpleDaoSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSessionHandler">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SimpleDaoSessionHandler 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSessionHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSessionHandler.InitializeStub">
            <summary>初始化 type StubSimpleDaoSessionHandler 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSessionHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSessionHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSimpleDaoSessionHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SqlMapDaoSession 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.#ctor(IBatisNet.DataAccess.DaoManager,IBatisNet.DataMapper.ISqlMapper)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction">
            <summary>设置 SqlMapDaoSession.BeginTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>设置 SqlMapDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction(System.Boolean)">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction(System.String)">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction(System.String,System.Data.IsolationLevel)">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction(System.String,System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransaction01">
            <summary>设置 SqlMapDaoSession.BeginTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransactionBoolean">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransactionBooleanIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransactionIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransactionString">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.BeginTransactionStringIsolationLevel">
            <summary>设置 SqlMapDaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CloseConnection">
            <summary>设置 SqlMapDaoSession.CloseConnection() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CloseConnection01">
            <summary>设置 SqlMapDaoSession.CloseConnection() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CommitTransaction">
            <summary>设置 SqlMapDaoSession.CommitTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CommitTransaction(System.Boolean)">
            <summary>设置 SqlMapDaoSession.CommitTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CommitTransaction01">
            <summary>设置 SqlMapDaoSession.CommitTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CommitTransactionBoolean">
            <summary>设置 SqlMapDaoSession.CommitTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.Complete">
            <summary>设置 SqlMapDaoSession.Complete() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.Complete01">
            <summary>设置 SqlMapDaoSession.Complete() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.ConnectionGet">
            <summary>设置 SqlMapDaoSession.get_Connection() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateCommand(System.Data.CommandType)">
            <summary>设置 SqlMapDaoSession.CreateCommand(CommandType commandType) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateCommandCommandType">
            <summary>设置 SqlMapDaoSession.CreateCommand(CommandType commandType) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateDataAdapter">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateDataAdapter(System.Data.IDbCommand)">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter(IDbCommand command) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateDataAdapter01">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateDataAdapterIDbCommand">
            <summary>设置 SqlMapDaoSession.CreateDataAdapter(IDbCommand command) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateDataParameter">
            <summary>设置 SqlMapDaoSession.CreateDataParameter() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CreateDataParameter01">
            <summary>设置 SqlMapDaoSession.CreateDataParameter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.DataSourceGet">
            <summary>设置 SqlMapDaoSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.Dispose">
            <summary>设置 SqlMapDaoSession.Dispose() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.Dispose01">
            <summary>设置 SqlMapDaoSession.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.InitializeStub">
            <summary>初始化 type StubSqlMapDaoSession 的新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.OpenConnection">
            <summary>设置 SqlMapDaoSession.OpenConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.OpenConnection(System.String)">
            <summary>设置 SqlMapDaoSession.OpenConnection(String connectionString) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.OpenConnection01">
            <summary>设置 SqlMapDaoSession.OpenConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.OpenConnectionString">
            <summary>设置 SqlMapDaoSession.OpenConnection(String connectionString) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.RollBackTransaction">
            <summary>设置 SqlMapDaoSession.RollBackTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.RollBackTransaction(System.Boolean)">
            <summary>设置 SqlMapDaoSession.RollBackTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.RollBackTransaction01">
            <summary>设置 SqlMapDaoSession.RollBackTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.RollBackTransactionBoolean">
            <summary>设置 SqlMapDaoSession.RollBackTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.TransactionGet">
            <summary>设置 SqlMapDaoSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.Connection">
            <summary>设置 SqlMapDaoSession.get_Connection() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.DataSource">
            <summary>设置 SqlMapDaoSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSession.Transaction">
            <summary>设置 SqlMapDaoSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSessionHandler">
            <summary>IBatisNet.DataAccess.DaoSessionHandlers.SqlMapDaoSessionHandler 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSessionHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSessionHandler.InitializeStub">
            <summary>初始化 type StubSqlMapDaoSessionHandler 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSessionHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSessionHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.DaoSessionHandlers.Fakes.StubSqlMapDaoSessionHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException">
            <summary>IBatisNet.DataAccess.Exceptions.DataAccessException 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.#ctor(IBatisNet.DataAccess.Exceptions.DataAccessException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.Constructor">
            <summary>设置 DataAccessException.DataAccessException() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.ConstructorException">
            <summary>设置 DataAccessException.DataAccessException(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 DataAccessException.DataAccessException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.ConstructorString">
            <summary>设置 DataAccessException.DataAccessException(String message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.ConstructorStringException">
            <summary>设置 DataAccessException.DataAccessException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Exceptions.Fakes.ShimDataAccessException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException">
            <summary>IBatisNet.DataAccess.Exceptions.DataAccessException 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubDataAccessException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubDataAccessException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.InitializeStub">
            <summary>初始化 type StubDataAccessException 的新实例</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Exceptions.Fakes.StubDataAccessException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.ShimDaoManager">
            <summary>IBatisNet.DataAccess.DaoManager 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoManager.#ctor(IBatisNet.DataAccess.DaoManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoManager.Bind(IBatisNet.DataAccess.IDaoManager)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.BeginTransaction">
            <summary>设置 DaoManager.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.BeginTransactionIsolationLevel">
            <summary>设置 DaoManager.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.CloseConnection">
            <summary>设置 DaoManager.CloseConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.CommitTransaction">
            <summary>设置 DaoManager.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.Configure">
            <summary>设置 DaoManager.Configure() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.ConfigureAndWatchConfigureHandler">
            <summary>设置 DaoManager.ConfigureAndWatch(ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.ConfigureAndWatchStringConfigureHandler">
            <summary>设置 DaoManager.ConfigureAndWatch(String resource, ConfigureHandler configureDelegate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.ConfigureString">
            <summary>设置 DaoManager.Configure(String resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.Constructor">
            <summary>设置 DaoManager.DaoManager() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DaoMapGet">
            <summary>设置 DaoManager.get_DaoMap() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DaoMapSetHybridDictionary">
            <summary>设置 DaoManager.set_DaoMap(HybridDictionary value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DaoSessionHandlerGet">
            <summary>设置 DaoManager.get_DaoSessionHandler() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DaoSessionHandlerSetIDaoSessionHandler">
            <summary>设置 DaoManager.set_DaoSessionHandler(IDaoSessionHandler value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DataSourceGet">
            <summary>设置 DaoManager.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DataSourceSetIDataSource">
            <summary>设置 DaoManager.set_DataSource(IDataSource value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DbProviderGet">
            <summary>设置 DaoManager.get_DbProvider() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.DbProviderSetIDbProvider">
            <summary>设置 DaoManager.set_DbProvider(IDbProvider value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.Dispose">
            <summary>设置 DaoManager.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.GetDaoSession">
            <summary>设置 DaoManager.GetDaoSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.GetDaoType">
            <summary>设置 DaoManager.GetDao(Type daoInterface) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.GetInstance">
            <summary>设置 DaoManager.GetInstance() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.GetInstanceIDao">
            <summary>设置 DaoManager.GetInstance(IDao dao) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.GetInstanceString">
            <summary>设置 DaoManager.GetInstance(String contextName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.IsDaoSessionStarted">
            <summary>设置 DaoManager.IsDaoSessionStarted() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.IsDefaultGet">
            <summary>设置 DaoManager.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.IsDefaultSetBoolean">
            <summary>设置 DaoManager.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.ItemGetType">
            <summary>设置 DaoManager.get_Item(Type daoInterface) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.LocalDaoSessionGet">
            <summary>设置 DaoManager.get_LocalDaoSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.LocalDataSourceGet">
            <summary>设置 DaoManager.get_LocalDataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.NameGet">
            <summary>设置 DaoManager.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.NameSetString">
            <summary>设置 DaoManager.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.NewInstance">
            <summary>设置 DaoManager.NewInstance() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.OpenConnection">
            <summary>设置 DaoManager.OpenConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.OpenConnectionString">
            <summary>设置 DaoManager.OpenConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.RegisterDaoDao">
            <summary>设置 DaoManager.RegisterDao(Dao dao) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.RegisterDaoManagerStringDaoManager">
            <summary>设置 DaoManager.RegisterDaoManager(String contextName, DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.Reset">
            <summary>设置 DaoManager.Reset() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.RollBackTransaction">
            <summary>设置 DaoManager.RollBackTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.StaticConstructor">
            <summary>设置 DaoManager.DaoManager() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.BeginTransaction">
            <summary>设置 DaoManager.BeginTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.BeginTransactionIsolationLevel">
            <summary>设置 DaoManager.BeginTransaction(IsolationLevel isolationLevel) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.CloseConnection">
            <summary>设置 DaoManager.CloseConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.CommitTransaction">
            <summary>设置 DaoManager.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DaoMapGet">
            <summary>设置 DaoManager.get_DaoMap() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DaoMapSetHybridDictionary">
            <summary>设置 DaoManager.set_DaoMap(HybridDictionary value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DaoSessionHandlerGet">
            <summary>设置 DaoManager.get_DaoSessionHandler() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DaoSessionHandlerSetIDaoSessionHandler">
            <summary>设置 DaoManager.set_DaoSessionHandler(IDaoSessionHandler value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DataSourceGet">
            <summary>设置 DaoManager.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DataSourceSetIDataSource">
            <summary>设置 DaoManager.set_DataSource(IDataSource value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DbProviderGet">
            <summary>设置 DaoManager.get_DbProvider() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.DbProviderSetIDbProvider">
            <summary>设置 DaoManager.set_DbProvider(IDbProvider value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.Dispose">
            <summary>设置 DaoManager.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.GetDaoSession">
            <summary>设置 DaoManager.GetDaoSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.GetDaoType">
            <summary>设置 DaoManager.GetDao(Type daoInterface) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.IsDaoSessionStarted">
            <summary>设置 DaoManager.IsDaoSessionStarted() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.IsDefaultGet">
            <summary>设置 DaoManager.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.IsDefaultSetBoolean">
            <summary>设置 DaoManager.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.ItemGetType">
            <summary>设置 DaoManager.get_Item(Type daoInterface) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.LocalDaoSessionGet">
            <summary>设置 DaoManager.get_LocalDaoSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.LocalDataSourceGet">
            <summary>设置 DaoManager.get_LocalDataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.NameGet">
            <summary>设置 DaoManager.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.NameSetString">
            <summary>设置 DaoManager.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.OpenConnection">
            <summary>设置 DaoManager.OpenConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.OpenConnectionString">
            <summary>设置 DaoManager.OpenConnection(String connectionString) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.RegisterDaoDao">
            <summary>设置 DaoManager.RegisterDao(Dao dao) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoManager.AllInstances.RollBackTransaction">
            <summary>设置 DaoManager.RollBackTransaction() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.ShimDaoSession">
            <summary>IBatisNet.DataAccess.DaoSession 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoSession.#ctor(IBatisNet.DataAccess.DaoSession)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoSession.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoSession.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoSession.Bind(IBatisNet.Common.IDalSession)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimDaoSession.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoSession.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimDaoSession.ConstructorDaoManager">
            <summary>设置 DaoSession.DaoSession(DaoManager daoManager) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.ShimDaoSession.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.ShimMessageManager">
            <summary>IBatisNet.DataAccess.MessageManager 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimMessageManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimMessageManager.#ctor(IBatisNet.DataAccess.MessageManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimMessageManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.ShimMessageManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.Constructor">
            <summary>设置 MessageManager.MessageManager() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.FormatMessageStringObjectArray">
            <summary>设置 MessageManager.FormatMessage(String key, Object[] format) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.GetStreamString">
            <summary>设置 MessageManager.GetStream(String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.InstanceGet">
            <summary>设置 MessageManager.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.ItemGetString">
            <summary>设置 MessageManager.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.StaticConstructor">
            <summary>设置 MessageManager.MessageManager() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.ShimMessageManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.AllInstances.FormatMessageStringObjectArray">
            <summary>设置 MessageManager.FormatMessage(String key, Object[] format) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.AllInstances.GetStreamString">
            <summary>设置 MessageManager.GetStream(String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.ShimMessageManager.AllInstances.ItemGetString">
            <summary>设置 MessageManager.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.StubDaoSession">
            <summary>IBatisNet.DataAccess.DaoSession 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.#ctor(IBatisNet.DataAccess.DaoManager)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction">
            <summary>设置 DaoSession.BeginTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>设置 DaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction(System.Boolean)">
            <summary>设置 DaoSession.BeginTransaction(Boolean openConnection) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction(System.String)">
            <summary>设置 DaoSession.BeginTransaction(String connectionString) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 DaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction(System.String,System.Data.IsolationLevel)">
            <summary>设置 DaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction(System.String,System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 DaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransaction01">
            <summary>设置 DaoSession.BeginTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransactionBoolean">
            <summary>设置 DaoSession.BeginTransaction(Boolean openConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransactionBooleanIsolationLevel">
            <summary>设置 DaoSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransactionIsolationLevel">
            <summary>设置 DaoSession.BeginTransaction(IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransactionString">
            <summary>设置 DaoSession.BeginTransaction(String connectionString) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 DaoSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.BeginTransactionStringIsolationLevel">
            <summary>设置 DaoSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.CloseConnection">
            <summary>设置 DaoSession.CloseConnection() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.CloseConnection01">
            <summary>设置 DaoSession.CloseConnection() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.CommitTransaction">
            <summary>设置 DaoSession.CommitTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.CommitTransaction(System.Boolean)">
            <summary>设置 DaoSession.CommitTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.CommitTransaction01">
            <summary>设置 DaoSession.CommitTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.CommitTransactionBoolean">
            <summary>设置 DaoSession.CommitTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.Complete">
            <summary>设置 DaoSession.Complete() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.Complete01">
            <summary>设置 DaoSession.Complete() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.ConnectionGet">
            <summary>设置 DaoSession.get_Connection() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateCommand(System.Data.CommandType)">
            <summary>设置 DaoSession.CreateCommand(CommandType commandType) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateCommandCommandType">
            <summary>设置 DaoSession.CreateCommand(CommandType commandType) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateDataAdapter">
            <summary>设置 DaoSession.CreateDataAdapter() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateDataAdapter(System.Data.IDbCommand)">
            <summary>设置 DaoSession.CreateDataAdapter(IDbCommand command) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateDataAdapter01">
            <summary>设置 DaoSession.CreateDataAdapter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateDataAdapterIDbCommand">
            <summary>设置 DaoSession.CreateDataAdapter(IDbCommand command) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateDataParameter">
            <summary>设置 DaoSession.CreateDataParameter() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.CreateDataParameter01">
            <summary>设置 DaoSession.CreateDataParameter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.DataSourceGet">
            <summary>设置 DaoSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.Dispose">
            <summary>设置 DaoSession.Dispose() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.Dispose01">
            <summary>设置 DaoSession.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.InitializeStub">
            <summary>初始化 type StubDaoSession 的新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.OpenConnection">
            <summary>设置 DaoSession.OpenConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.OpenConnection(System.String)">
            <summary>设置 DaoSession.OpenConnection(String connectionString) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.OpenConnection01">
            <summary>设置 DaoSession.OpenConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.OpenConnectionString">
            <summary>设置 DaoSession.OpenConnection(String connectionString) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.RollBackTransaction">
            <summary>设置 DaoSession.RollBackTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubDaoSession.RollBackTransaction(System.Boolean)">
            <summary>设置 DaoSession.RollBackTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.RollBackTransaction01">
            <summary>设置 DaoSession.RollBackTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.RollBackTransactionBoolean">
            <summary>设置 DaoSession.RollBackTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubDaoSession.TransactionGet">
            <summary>设置 DaoSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubDaoSession.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubDaoSession.Connection">
            <summary>设置 DaoSession.get_Connection() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubDaoSession.DataSource">
            <summary>设置 DaoSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubDaoSession.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubDaoSession.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubDaoSession.Transaction">
            <summary>设置 DaoSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.StubIDaoManager">
            <summary>IBatisNet.DataAccess.IDaoManager 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.#ctor">
            <summary>初始化 type StubIDaoManager 的新实例</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.BeginTransaction">
            <summary>设置 IDaoManager.BeginTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.BeginTransactionIsolationLevel">
            <summary>设置 IDaoManager.BeginTransaction(IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.CloseConnection">
            <summary>设置 IDaoManager.CloseConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.CommitTransaction">
            <summary>设置 IDaoManager.CommitTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.GetDaoSession">
            <summary>设置 IDaoManager.GetDaoSession() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.GetDaoType">
            <summary>设置 IDaoManager.GetDao(Type daoInterface) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#BeginTransaction">
            <summary>设置 IDaoManager.BeginTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#BeginTransaction(System.Data.IsolationLevel)">
            <summary>设置 IDaoManager.BeginTransaction(IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#CloseConnection">
            <summary>设置 IDaoManager.CloseConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#CommitTransaction">
            <summary>设置 IDaoManager.CommitTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#GetDao(System.Type)">
            <summary>设置 IDaoManager.GetDao(Type daoInterface) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#GetDaoSession">
            <summary>设置 IDaoManager.GetDaoSession() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#IsDaoSessionStarted">
            <summary>设置 IDaoManager.IsDaoSessionStarted() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#OpenConnection">
            <summary>设置 IDaoManager.OpenConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#OpenConnection(System.String)">
            <summary>设置 IDaoManager.OpenConnection(String connectionString) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#RollBackTransaction">
            <summary>设置 IDaoManager.RollBackTransaction() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.IsDaoSessionStarted">
            <summary>设置 IDaoManager.IsDaoSessionStarted() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.ItemGetType">
            <summary>设置 IDaoManager.get_Item(Type daoInterface) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.LocalDaoSessionGet">
            <summary>设置 IDaoManager.get_LocalDaoSession() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.LocalDataSourceGet">
            <summary>设置 IDaoManager.get_LocalDataSource() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.OpenConnection">
            <summary>设置 IDaoManager.OpenConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.OpenConnectionString">
            <summary>设置 IDaoManager.OpenConnection(String connectionString) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Fakes.StubIDaoManager.RollBackTransaction">
            <summary>设置 IDaoManager.RollBackTransaction() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubIDaoManager.IBatisNet#DataAccess#IDaoManager#Item(System.Type)">
            <summary>设置 IDaoManager.get_Item(Type daoInterface) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#LocalDaoSession">
            <summary>设置 IDaoManager.get_LocalDaoSession() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubIDaoManager.ibnda::IBatisNet#DataAccess#IDaoManager#LocalDataSource">
            <summary>设置 IDaoManager.get_LocalDataSource() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Fakes.StubMessageManager">
            <summary>IBatisNet.DataAccess.MessageManager 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubMessageManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Fakes.StubMessageManager.InitializeStub">
            <summary>初始化 type StubMessageManager 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubMessageManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubMessageManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Fakes.StubMessageManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Interfaces.Fakes.StubIDao">
            <summary>IBatisNet.DataAccess.Interfaces.IDao 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Interfaces.Fakes.StubIDao.#ctor">
            <summary>初始化 type StubIDao 的新实例</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Interfaces.Fakes.StubIDaoSessionHandler">
            <summary>IBatisNet.DataAccess.Interfaces.IDaoSessionHandler 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Interfaces.Fakes.StubIDaoSessionHandler.#ctor">
            <summary>初始化 type StubIDaoSessionHandler 的新实例</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Interfaces.Fakes.StubIDaoSessionHandler.ConfigureNameValueCollectionIDictionary">
            <summary>设置 IDaoSessionHandler.Configure(NameValueCollection properties, IDictionary resources) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Interfaces.Fakes.StubIDaoSessionHandler.GetDaoSessionDaoManager">
            <summary>设置 IDaoSessionHandler.GetDaoSession(DaoManager daoManager) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Interfaces.Fakes.StubIDaoSessionHandler.ibnda::IBatisNet#DataAccess#Interfaces#IDaoSessionHandler#Configure(System.Collections.Specialized.NameValueCollection,System.Collections.IDictionary)">
            <summary>设置 IDaoSessionHandler.Configure(NameValueCollection properties, IDictionary resources) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Interfaces.Fakes.StubIDaoSessionHandler.ibnda::IBatisNet#DataAccess#Interfaces#IDaoSessionHandler#GetDaoSession(IBatisNet.DataAccess.DaoManager)">
            <summary>设置 IDaoSessionHandler.GetDaoSession(DaoManager daoManager) 的 存根</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope">
            <summary>IBatisNet.DataAccess.Scope.ConfigurationScope 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.#ctor(IBatisNet.DataAccess.Scope.ConfigurationScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.Constructor">
            <summary>设置 ConfigurationScope.ConfigurationScope() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.DaoConfigDocumentGet">
            <summary>设置 ConfigurationScope.get_DaoConfigDocument() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.DaoConfigDocumentSetXmlDocument">
            <summary>设置 ConfigurationScope.set_DaoConfigDocument(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.DaoSectionHandlersGet">
            <summary>设置 ConfigurationScope.get_DaoSectionHandlers() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.ErrorContextGet">
            <summary>设置 ConfigurationScope.get_ErrorContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.NodeContextGet">
            <summary>设置 ConfigurationScope.get_NodeContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.NodeContextSetXmlNode">
            <summary>设置 ConfigurationScope.set_NodeContext(XmlNode value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.PropertiesGet">
            <summary>设置 ConfigurationScope.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.ProvidersGet">
            <summary>设置 ConfigurationScope.get_Providers() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.UseConfigFileWatcherGet">
            <summary>设置 ConfigurationScope.get_UseConfigFileWatcher() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.UseConfigFileWatcherSetBoolean">
            <summary>设置 ConfigurationScope.set_UseConfigFileWatcher(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.XmlNamespaceManagerGet">
            <summary>设置 ConfigurationScope.get_XmlNamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.XmlNamespaceManagerSetXmlNamespaceManager">
            <summary>设置 ConfigurationScope.set_XmlNamespaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.DaoConfigDocumentGet">
            <summary>设置 ConfigurationScope.get_DaoConfigDocument() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.DaoConfigDocumentSetXmlDocument">
            <summary>设置 ConfigurationScope.set_DaoConfigDocument(XmlDocument value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.DaoSectionHandlersGet">
            <summary>设置 ConfigurationScope.get_DaoSectionHandlers() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.ErrorContextGet">
            <summary>设置 ConfigurationScope.get_ErrorContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.NodeContextGet">
            <summary>设置 ConfigurationScope.get_NodeContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.NodeContextSetXmlNode">
            <summary>设置 ConfigurationScope.set_NodeContext(XmlNode value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.PropertiesGet">
            <summary>设置 ConfigurationScope.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.ProvidersGet">
            <summary>设置 ConfigurationScope.get_Providers() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.UseConfigFileWatcherGet">
            <summary>设置 ConfigurationScope.get_UseConfigFileWatcher() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.UseConfigFileWatcherSetBoolean">
            <summary>设置 ConfigurationScope.set_UseConfigFileWatcher(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.XmlNamespaceManagerGet">
            <summary>设置 ConfigurationScope.get_XmlNamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimConfigurationScope.AllInstances.XmlNamespaceManagerSetXmlNamespaceManager">
            <summary>设置 ConfigurationScope.set_XmlNamespaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext">
            <summary>IBatisNet.DataAccess.Scope.ErrorContext 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.#ctor(IBatisNet.DataAccess.Scope.ErrorContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.ActivityGet">
            <summary>设置 ErrorContext.get_Activity() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.ActivitySetString">
            <summary>设置 ErrorContext.set_Activity(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.CauseGet">
            <summary>设置 ErrorContext.get_Cause() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.CauseSetException">
            <summary>设置 ErrorContext.set_Cause(Exception value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.Constructor">
            <summary>设置 ErrorContext.ErrorContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.MoreInfoGet">
            <summary>设置 ErrorContext.get_MoreInfo() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.MoreInfoSetString">
            <summary>设置 ErrorContext.set_MoreInfo(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.ObjectIdGet">
            <summary>设置 ErrorContext.get_ObjectId() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.ObjectIdSetString">
            <summary>设置 ErrorContext.set_ObjectId(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.Reset">
            <summary>设置 ErrorContext.Reset() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.ResourceGet">
            <summary>设置 ErrorContext.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.ResourceSetString">
            <summary>设置 ErrorContext.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.ToString">
            <summary>设置 ErrorContext.ToString() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.ActivityGet">
            <summary>设置 ErrorContext.get_Activity() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.ActivitySetString">
            <summary>设置 ErrorContext.set_Activity(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.CauseGet">
            <summary>设置 ErrorContext.get_Cause() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.CauseSetException">
            <summary>设置 ErrorContext.set_Cause(Exception value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.MoreInfoGet">
            <summary>设置 ErrorContext.get_MoreInfo() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.MoreInfoSetString">
            <summary>设置 ErrorContext.set_MoreInfo(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.ObjectIdGet">
            <summary>设置 ErrorContext.get_ObjectId() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.ObjectIdSetString">
            <summary>设置 ErrorContext.set_ObjectId(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.Reset">
            <summary>设置 ErrorContext.Reset() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.ResourceGet">
            <summary>设置 ErrorContext.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.ResourceSetString">
            <summary>设置 ErrorContext.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.ShimErrorContext.AllInstances.ToString01">
            <summary>设置 ErrorContext.ToString() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Scope.Fakes.StubConfigurationScope">
            <summary>IBatisNet.DataAccess.Scope.ConfigurationScope 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.StubConfigurationScope.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.StubConfigurationScope.InitializeStub">
            <summary>初始化 type StubConfigurationScope 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.StubConfigurationScope.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.StubConfigurationScope.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.StubConfigurationScope.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext">
            <summary>IBatisNet.DataAccess.Scope.ErrorContext 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext.InitializeStub">
            <summary>初始化 type StubErrorContext 的新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext.ToString">
            <summary>设置 ErrorContext.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext.ToString01">
            <summary>设置 ErrorContext.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.Scope.Fakes.StubErrorContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore">
            <summary>IBatisNet.DataAccess.SessionStore.AbstractSessionStore 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore.#ctor(IBatisNet.DataAccess.SessionStore.AbstractSessionStore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore.Bind(IBatisNet.DataAccess.SessionStore.ISessionStore)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore.ConstructorString">
            <summary>设置 AbstractSessionStore.AbstractSessionStore(String daoManagerName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimAbstractSessionStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore">
            <summary>IBatisNet.DataAccess.SessionStore.CallContextSessionStore 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.#ctor(IBatisNet.DataAccess.SessionStore.CallContextSessionStore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.Bind(IBatisNet.DataAccess.SessionStore.ISessionStore)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.ConstructorString">
            <summary>设置 CallContextSessionStore.CallContextSessionStore(String daoManagerName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.Dispose">
            <summary>设置 CallContextSessionStore.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.LocalSessionGet">
            <summary>设置 CallContextSessionStore.get_LocalSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.StoreIDalSession">
            <summary>设置 CallContextSessionStore.Store(IDalSession session) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.AllInstances.Dispose">
            <summary>设置 CallContextSessionStore.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.AllInstances.LocalSessionGet">
            <summary>设置 CallContextSessionStore.get_LocalSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimCallContextSessionStore.AllInstances.StoreIDalSession">
            <summary>设置 CallContextSessionStore.Store(IDalSession session) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory">
            <summary>IBatisNet.DataAccess.SessionStore.SessionStoreFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.#ctor(IBatisNet.DataAccess.SessionStore.SessionStoreFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.Constructor">
            <summary>设置 SessionStoreFactory.SessionStoreFactory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.GetSessionStoreString">
            <summary>设置 SessionStoreFactory.GetSessionStore(String daoManagerName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimSessionStoreFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore">
            <summary>IBatisNet.DataAccess.SessionStore.WebSessionStore 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.#ctor(IBatisNet.DataAccess.SessionStore.WebSessionStore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.Bind(IBatisNet.DataAccess.SessionStore.ISessionStore)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.ConstructorString">
            <summary>设置 WebSessionStore.WebSessionStore(String daoManagerName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.Dispose">
            <summary>设置 WebSessionStore.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.LocalSessionGet">
            <summary>设置 WebSessionStore.get_LocalSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.ObtainSessionContext">
            <summary>设置 WebSessionStore.ObtainSessionContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.StoreIDalSession">
            <summary>设置 WebSessionStore.Store(IDalSession session) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.AllInstances.Dispose">
            <summary>设置 WebSessionStore.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.AllInstances.LocalSessionGet">
            <summary>设置 WebSessionStore.get_LocalSession() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.ShimWebSessionStore.AllInstances.StoreIDalSession">
            <summary>设置 WebSessionStore.Store(IDalSession session) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore">
            <summary>IBatisNet.DataAccess.SessionStore.AbstractSessionStore 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.Dispose">
            <summary>设置 AbstractSessionStore.Dispose() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.Dispose01">
            <summary>设置 AbstractSessionStore.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.InitializeStub">
            <summary>初始化 type StubAbstractSessionStore 的新实例</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.LocalSessionGet">
            <summary>设置 AbstractSessionStore.get_LocalSession() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.Store(IBatisNet.Common.IDalSession)">
            <summary>设置 AbstractSessionStore.Store(IDalSession session) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.StoreIDalSession">
            <summary>设置 AbstractSessionStore.Store(IDalSession session) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubAbstractSessionStore.LocalSession">
            <summary>设置 AbstractSessionStore.get_LocalSession() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore">
            <summary>IBatisNet.DataAccess.SessionStore.CallContextSessionStore 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.Dispose">
            <summary>设置 CallContextSessionStore.Dispose() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.Dispose01">
            <summary>设置 CallContextSessionStore.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.InitializeStub">
            <summary>初始化 type StubCallContextSessionStore 的新实例</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.LocalSessionGet">
            <summary>设置 CallContextSessionStore.get_LocalSession() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.Store(IBatisNet.Common.IDalSession)">
            <summary>设置 CallContextSessionStore.Store(IDalSession session) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.StoreIDalSession">
            <summary>设置 CallContextSessionStore.Store(IDalSession session) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubCallContextSessionStore.LocalSession">
            <summary>设置 CallContextSessionStore.get_LocalSession() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore">
            <summary>IBatisNet.DataAccess.SessionStore.ISessionStore 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore.#ctor">
            <summary>初始化 type StubISessionStore 的新实例</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore.Dispose">
            <summary>设置 ISessionStore.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore.ibnda::IBatisNet#DataAccess#SessionStore#ISessionStore#Dispose">
            <summary>设置 ISessionStore.Dispose() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore.ibnda::IBatisNet#DataAccess#SessionStore#ISessionStore#Store(IBatisNet.Common.IDalSession)">
            <summary>设置 ISessionStore.Store(IDalSession session) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore.LocalSessionGet">
            <summary>设置 ISessionStore.get_LocalSession() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore.StoreIDalSession">
            <summary>设置 ISessionStore.Store(IDalSession session) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubISessionStore.ibnda::IBatisNet#DataAccess#SessionStore#ISessionStore#LocalSession">
            <summary>设置 ISessionStore.get_LocalSession() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.StubSessionStoreFactory">
            <summary>IBatisNet.DataAccess.SessionStore.SessionStoreFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubSessionStoreFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubSessionStoreFactory.InitializeStub">
            <summary>初始化 type StubSessionStoreFactory 的新实例</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubSessionStoreFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubSessionStoreFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubSessionStoreFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore">
            <summary>IBatisNet.DataAccess.SessionStore.WebSessionStore 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.Dispose">
            <summary>设置 WebSessionStore.Dispose() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.Dispose01">
            <summary>设置 WebSessionStore.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.InitializeStub">
            <summary>初始化 type StubWebSessionStore 的新实例</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.LocalSessionGet">
            <summary>设置 WebSessionStore.get_LocalSession() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.Store(IBatisNet.Common.IDalSession)">
            <summary>设置 WebSessionStore.Store(IDalSession session) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.StoreIDalSession">
            <summary>设置 WebSessionStore.Store(IDalSession session) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.DataAccess.SessionStore.Fakes.StubWebSessionStore.LocalSession">
            <summary>设置 WebSessionStore.get_LocalSession() 的 stub</summary>
        </member>
    </members>
</doc>
