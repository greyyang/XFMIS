<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IBatisNet.Common.1.4.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException">
            <summary>IBatisNet.Common.Exceptions.ConfigurationException 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.#ctor(IBatisNet.Common.Exceptions.ConfigurationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.Constructor">
            <summary>设置 ConfigurationException.ConfigurationException() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.ConstructorException">
            <summary>设置 ConfigurationException.ConfigurationException(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ConfigurationException.ConfigurationException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.ConstructorString">
            <summary>设置 ConfigurationException.ConfigurationException(String message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.ConstructorStringException">
            <summary>设置 ConfigurationException.ConfigurationException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimConfigurationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException">
            <summary>IBatisNet.Common.Exceptions.ForeignKeyException 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.#ctor(IBatisNet.Common.Exceptions.ForeignKeyException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.Constructor">
            <summary>设置 ForeignKeyException.ForeignKeyException() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.ConstructorException">
            <summary>设置 ForeignKeyException.ForeignKeyException(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ForeignKeyException.ForeignKeyException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.ConstructorString">
            <summary>设置 ForeignKeyException.ForeignKeyException(String message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.ConstructorStringException">
            <summary>设置 ForeignKeyException.ForeignKeyException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimForeignKeyException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException">
            <summary>IBatisNet.Common.Exceptions.IBatisNetException 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.#ctor(IBatisNet.Common.Exceptions.IBatisNetException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.Constructor">
            <summary>设置 IBatisNetException.IBatisNetException() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.ConstructorException">
            <summary>设置 IBatisNetException.IBatisNetException(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 IBatisNetException.IBatisNetException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.ConstructorString">
            <summary>设置 IBatisNetException.IBatisNetException(String message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.ConstructorStringException">
            <summary>设置 IBatisNetException.IBatisNetException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimIBatisNetException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimProbeException">
            <summary>IBatisNet.Common.Exceptions.ProbeException 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.#ctor(IBatisNet.Common.Exceptions.ProbeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.Constructor">
            <summary>设置 ProbeException.ProbeException() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.ConstructorException">
            <summary>设置 ProbeException.ProbeException(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ProbeException.ProbeException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.ConstructorString">
            <summary>设置 ProbeException.ProbeException(String message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.ConstructorStringException">
            <summary>设置 ProbeException.ProbeException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.ShimProbeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException">
            <summary>IBatisNet.Common.Exceptions.ConfigurationException 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubConfigurationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubConfigurationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.InitializeStub">
            <summary>初始化 type StubConfigurationException 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubConfigurationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException">
            <summary>IBatisNet.Common.Exceptions.ForeignKeyException 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubForeignKeyException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubForeignKeyException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.InitializeStub">
            <summary>初始化 type StubForeignKeyException 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubForeignKeyException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException">
            <summary>IBatisNet.Common.Exceptions.IBatisNetException 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubIBatisNetException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubIBatisNetException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.InitializeStub">
            <summary>初始化 type StubIBatisNetException 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubIBatisNetException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Exceptions.Fakes.StubProbeException">
            <summary>IBatisNet.Common.Exceptions.ProbeException 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubProbeException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubProbeException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.InitializeStub">
            <summary>初始化 type StubProbeException 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Exceptions.Fakes.StubProbeException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Exceptions.Fakes.StubProbeException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Exceptions.Fakes.StubProbeException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimDataSource">
            <summary>IBatisNet.Common.DataSource 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSource.#ctor(IBatisNet.Common.DataSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSource.Bind(IBatisNet.Common.IDataSource)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.CheckPropertyStringStringString">
            <summary>设置 DataSource.CheckPropertyString(String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.ConnectionStringGet">
            <summary>设置 DataSource.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.ConnectionStringSetString">
            <summary>设置 DataSource.set_ConnectionString(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.Constructor">
            <summary>设置 DataSource.DataSource() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.DbProviderGet">
            <summary>设置 DataSource.get_DbProvider() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.DbProviderSetIDbProvider">
            <summary>设置 DataSource.set_DbProvider(IDbProvider value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.NameGet">
            <summary>设置 DataSource.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.NameSetString">
            <summary>设置 DataSource.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.ToString">
            <summary>设置 DataSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimDataSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.CheckPropertyStringStringString">
            <summary>设置 DataSource.CheckPropertyString(String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.ConnectionStringGet">
            <summary>设置 DataSource.get_ConnectionString() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.ConnectionStringSetString">
            <summary>设置 DataSource.set_ConnectionString(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.DbProviderGet">
            <summary>设置 DataSource.get_DbProvider() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.DbProviderSetIDbProvider">
            <summary>设置 DataSource.set_DbProvider(IDbProvider value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.NameGet">
            <summary>设置 DataSource.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.NameSetString">
            <summary>设置 DataSource.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSource.AllInstances.ToString01">
            <summary>设置 DataSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer">
            <summary>IBatisNet.Common.DataSourceDeSerializer 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.#ctor(IBatisNet.Common.DataSourceDeSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.Constructor">
            <summary>设置 DataSourceDeSerializer.DataSourceDeSerializer() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.DeserializeXmlNode">
            <summary>设置 DataSourceDeSerializer.Deserialize(XmlNode node) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimDataSourceDeSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimDbProvider">
            <summary>IBatisNet.Common.DbProvider 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDbProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDbProvider.#ctor(IBatisNet.Common.DbProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDbProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDbProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimDbProvider.Bind(IBatisNet.Common.IDbProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllowMARSGet">
            <summary>设置 DbProvider.get_AllowMARS() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllowMARSSetBoolean">
            <summary>设置 DbProvider.set_AllowMARS(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AssemblyNameGet">
            <summary>设置 DbProvider.get_AssemblyName() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AssemblyNameSetString">
            <summary>设置 DbProvider.set_AssemblyName(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CheckPropertyStringStringString">
            <summary>设置 DbProvider.CheckPropertyString(String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CheckPropertyTypeStringTypeType">
            <summary>设置 DbProvider.CheckPropertyType(String propertyName, Type expectedType, Type value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CommandBuilderClassGet">
            <summary>设置 DbProvider.get_CommandBuilderClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CommandBuilderClassSetString">
            <summary>设置 DbProvider.set_CommandBuilderClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CommandBuilderTypeGet">
            <summary>设置 DbProvider.get_CommandBuilderType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.Constructor">
            <summary>设置 DbProvider.DbProvider() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CreateCommand">
            <summary>设置 DbProvider.CreateCommand() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CreateConnection">
            <summary>设置 DbProvider.CreateConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CreateDataAdapter">
            <summary>设置 DbProvider.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.CreateDataParameter">
            <summary>设置 DbProvider.CreateDataParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DataAdapterClassGet">
            <summary>设置 DbProvider.get_DataAdapterClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DataAdapterClassSetString">
            <summary>设置 DbProvider.set_DataAdapterClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DbCommandClassGet">
            <summary>设置 DbProvider.get_DbCommandClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DbCommandClassSetString">
            <summary>设置 DbProvider.set_DbCommandClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DbConnectionClassGet">
            <summary>设置 DbProvider.get_DbConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DbConnectionClassSetString">
            <summary>设置 DbProvider.set_DbConnectionClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DescriptionGet">
            <summary>设置 DbProvider.get_Description() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.DescriptionSetString">
            <summary>设置 DbProvider.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.EqualsObject">
            <summary>设置 DbProvider.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.FormatNameForParameterString">
            <summary>设置 DbProvider.FormatNameForParameter(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.FormatNameForSqlString">
            <summary>设置 DbProvider.FormatNameForSql(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.GetHashCode">
            <summary>设置 DbProvider.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.Initialize">
            <summary>设置 DbProvider.Initialize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.IsDefaultGet">
            <summary>设置 DbProvider.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.IsDefaultSetBoolean">
            <summary>设置 DbProvider.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.IsEnabledGet">
            <summary>设置 DbProvider.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.IsEnabledSetBoolean">
            <summary>设置 DbProvider.set_IsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.IsObdcGet">
            <summary>设置 DbProvider.get_IsObdc() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.NameGet">
            <summary>设置 DbProvider.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.NameSetString">
            <summary>设置 DbProvider.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ParameterDbTypeClassGet">
            <summary>设置 DbProvider.get_ParameterDbTypeClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ParameterDbTypeClassSetString">
            <summary>设置 DbProvider.set_ParameterDbTypeClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ParameterDbTypeGet">
            <summary>设置 DbProvider.get_ParameterDbType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ParameterDbTypePropertyGet">
            <summary>设置 DbProvider.get_ParameterDbTypeProperty() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ParameterDbTypePropertySetString">
            <summary>设置 DbProvider.set_ParameterDbTypeProperty(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ParameterPrefixGet">
            <summary>设置 DbProvider.get_ParameterPrefix() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ParameterPrefixSetString">
            <summary>设置 DbProvider.set_ParameterPrefix(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.SetDbParameterPrecisionGet">
            <summary>设置 DbProvider.get_SetDbParameterPrecision() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.SetDbParameterPrecisionSetBoolean">
            <summary>设置 DbProvider.set_SetDbParameterPrecision(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.SetDbParameterScaleGet">
            <summary>设置 DbProvider.get_SetDbParameterScale() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.SetDbParameterScaleSetBoolean">
            <summary>设置 DbProvider.set_SetDbParameterScale(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.SetDbParameterSizeGet">
            <summary>设置 DbProvider.get_SetDbParameterSize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.SetDbParameterSizeSetBoolean">
            <summary>设置 DbProvider.set_SetDbParameterSize(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.ToString">
            <summary>设置 DbProvider.ToString() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UseDeriveParametersGet">
            <summary>设置 DbProvider.get_UseDeriveParameters() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UseDeriveParametersSetBoolean">
            <summary>设置 DbProvider.set_UseDeriveParameters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UseParameterPrefixInParameterGet">
            <summary>设置 DbProvider.get_UseParameterPrefixInParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UseParameterPrefixInParameterSetBoolean">
            <summary>设置 DbProvider.set_UseParameterPrefixInParameter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UseParameterPrefixInSqlGet">
            <summary>设置 DbProvider.get_UseParameterPrefixInSql() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UseParameterPrefixInSqlSetBoolean">
            <summary>设置 DbProvider.set_UseParameterPrefixInSql(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UsePositionalParametersGet">
            <summary>设置 DbProvider.get_UsePositionalParameters() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.UsePositionalParametersSetBoolean">
            <summary>设置 DbProvider.set_UsePositionalParameters(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.AllowMARSGet">
            <summary>设置 DbProvider.get_AllowMARS() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.AllowMARSSetBoolean">
            <summary>设置 DbProvider.set_AllowMARS(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.AssemblyNameGet">
            <summary>设置 DbProvider.get_AssemblyName() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.AssemblyNameSetString">
            <summary>设置 DbProvider.set_AssemblyName(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CheckPropertyStringStringString">
            <summary>设置 DbProvider.CheckPropertyString(String propertyName, String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CheckPropertyTypeStringTypeType">
            <summary>设置 DbProvider.CheckPropertyType(String propertyName, Type expectedType, Type value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CommandBuilderClassGet">
            <summary>设置 DbProvider.get_CommandBuilderClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CommandBuilderClassSetString">
            <summary>设置 DbProvider.set_CommandBuilderClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CommandBuilderTypeGet">
            <summary>设置 DbProvider.get_CommandBuilderType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CreateCommand">
            <summary>设置 DbProvider.CreateCommand() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CreateConnection">
            <summary>设置 DbProvider.CreateConnection() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CreateDataAdapter">
            <summary>设置 DbProvider.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.CreateDataParameter">
            <summary>设置 DbProvider.CreateDataParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DataAdapterClassGet">
            <summary>设置 DbProvider.get_DataAdapterClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DataAdapterClassSetString">
            <summary>设置 DbProvider.set_DataAdapterClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DbCommandClassGet">
            <summary>设置 DbProvider.get_DbCommandClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DbCommandClassSetString">
            <summary>设置 DbProvider.set_DbCommandClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DbConnectionClassGet">
            <summary>设置 DbProvider.get_DbConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DbConnectionClassSetString">
            <summary>设置 DbProvider.set_DbConnectionClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DescriptionGet">
            <summary>设置 DbProvider.get_Description() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.DescriptionSetString">
            <summary>设置 DbProvider.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.EqualsObject">
            <summary>设置 DbProvider.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.FormatNameForParameterString">
            <summary>设置 DbProvider.FormatNameForParameter(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.FormatNameForSqlString">
            <summary>设置 DbProvider.FormatNameForSql(String parameterName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.GetHashCode01">
            <summary>设置 DbProvider.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.Initialize">
            <summary>设置 DbProvider.Initialize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.IsDefaultGet">
            <summary>设置 DbProvider.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.IsDefaultSetBoolean">
            <summary>设置 DbProvider.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.IsEnabledGet">
            <summary>设置 DbProvider.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.IsEnabledSetBoolean">
            <summary>设置 DbProvider.set_IsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.IsObdcGet">
            <summary>设置 DbProvider.get_IsObdc() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.NameGet">
            <summary>设置 DbProvider.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.NameSetString">
            <summary>设置 DbProvider.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ParameterDbTypeClassGet">
            <summary>设置 DbProvider.get_ParameterDbTypeClass() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ParameterDbTypeClassSetString">
            <summary>设置 DbProvider.set_ParameterDbTypeClass(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ParameterDbTypeGet">
            <summary>设置 DbProvider.get_ParameterDbType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ParameterDbTypePropertyGet">
            <summary>设置 DbProvider.get_ParameterDbTypeProperty() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ParameterDbTypePropertySetString">
            <summary>设置 DbProvider.set_ParameterDbTypeProperty(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ParameterPrefixGet">
            <summary>设置 DbProvider.get_ParameterPrefix() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ParameterPrefixSetString">
            <summary>设置 DbProvider.set_ParameterPrefix(String value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.SetDbParameterPrecisionGet">
            <summary>设置 DbProvider.get_SetDbParameterPrecision() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.SetDbParameterPrecisionSetBoolean">
            <summary>设置 DbProvider.set_SetDbParameterPrecision(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.SetDbParameterScaleGet">
            <summary>设置 DbProvider.get_SetDbParameterScale() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.SetDbParameterScaleSetBoolean">
            <summary>设置 DbProvider.set_SetDbParameterScale(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.SetDbParameterSizeGet">
            <summary>设置 DbProvider.get_SetDbParameterSize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.SetDbParameterSizeSetBoolean">
            <summary>设置 DbProvider.set_SetDbParameterSize(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.ToString01">
            <summary>设置 DbProvider.ToString() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UseDeriveParametersGet">
            <summary>设置 DbProvider.get_UseDeriveParameters() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UseDeriveParametersSetBoolean">
            <summary>设置 DbProvider.set_UseDeriveParameters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UseParameterPrefixInParameterGet">
            <summary>设置 DbProvider.get_UseParameterPrefixInParameter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UseParameterPrefixInParameterSetBoolean">
            <summary>设置 DbProvider.set_UseParameterPrefixInParameter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UseParameterPrefixInSqlGet">
            <summary>设置 DbProvider.get_UseParameterPrefixInSql() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UseParameterPrefixInSqlSetBoolean">
            <summary>设置 DbProvider.set_UseParameterPrefixInSql(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UsePositionalParametersGet">
            <summary>设置 DbProvider.get_UsePositionalParameters() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimDbProvider.AllInstances.UsePositionalParametersSetBoolean">
            <summary>设置 DbProvider.set_UsePositionalParameters(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimProviderDeSerializer">
            <summary>IBatisNet.Common.ProviderDeSerializer 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimProviderDeSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimProviderDeSerializer.#ctor(IBatisNet.Common.ProviderDeSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimProviderDeSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.ShimProviderDeSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimProviderDeSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimProviderDeSerializer.Constructor">
            <summary>设置 ProviderDeSerializer.ProviderDeSerializer() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.ShimProviderDeSerializer.DeserializeXmlNode">
            <summary>设置 ProviderDeSerializer.Deserialize(XmlNode node) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.ShimProviderDeSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.StubDataSource">
            <summary>IBatisNet.Common.DataSource 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDataSource.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDataSource.AttachBackingFieldToConnectionString">
            <summary>附加委托以将 StubDataSource.ConnectionString 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDataSource.AttachBackingFieldToDbProvider">
            <summary>附加委托以将 StubDataSource.DbProvider 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDataSource.ConnectionStringGet">
            <summary>设置 DataSource.get_ConnectionString() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDataSource.ConnectionStringSetString">
            <summary>设置 DataSource.set_ConnectionString(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDataSource.DbProviderGet">
            <summary>设置 DataSource.get_DbProvider() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDataSource.DbProviderSetIDbProvider">
            <summary>设置 DataSource.set_DbProvider(IDbProvider value) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDataSource.InitializeStub">
            <summary>初始化 type StubDataSource 的新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDataSource.ToString">
            <summary>设置 DataSource.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDataSource.ToString01">
            <summary>设置 DataSource.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSource.ConnectionString">
            <summary>设置 DataSource.get_ConnectionString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSource.DbProvider">
            <summary>设置 DataSource.get_DbProvider() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.StubDataSourceDeSerializer">
            <summary>IBatisNet.Common.DataSourceDeSerializer 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDataSourceDeSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDataSourceDeSerializer.InitializeStub">
            <summary>初始化 type StubDataSourceDeSerializer 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSourceDeSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSourceDeSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDataSourceDeSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.StubDbProvider">
            <summary>IBatisNet.Common.DbProvider 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.CreateCommand">
            <summary>设置 DbProvider.CreateCommand() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.CreateCommand01">
            <summary>设置 DbProvider.CreateCommand() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.CreateConnection">
            <summary>设置 DbProvider.CreateConnection() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.CreateConnection01">
            <summary>设置 DbProvider.CreateConnection() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.CreateDataAdapter">
            <summary>设置 DbProvider.CreateDataAdapter() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.CreateDataAdapter01">
            <summary>设置 DbProvider.CreateDataAdapter() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.CreateDataParameter">
            <summary>设置 DbProvider.CreateDataParameter() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.CreateDataParameter01">
            <summary>设置 DbProvider.CreateDataParameter() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.Equals(System.Object)">
            <summary>设置 DbProvider.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.EqualsObject">
            <summary>设置 DbProvider.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.FormatNameForParameter(System.String)">
            <summary>设置 DbProvider.FormatNameForParameter(String parameterName) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.FormatNameForParameterString">
            <summary>设置 DbProvider.FormatNameForParameter(String parameterName) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.FormatNameForSql(System.String)">
            <summary>设置 DbProvider.FormatNameForSql(String parameterName) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.FormatNameForSqlString">
            <summary>设置 DbProvider.FormatNameForSql(String parameterName) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.GetHashCode">
            <summary>设置 DbProvider.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.GetHashCode01">
            <summary>设置 DbProvider.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.InitializeStub">
            <summary>初始化 type StubDbProvider 的新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubDbProvider.ToString">
            <summary>设置 DbProvider.ToString() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubDbProvider.ToString01">
            <summary>设置 DbProvider.ToString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDbProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDbProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubDbProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.StubIDalSession">
            <summary>IBatisNet.Common.IDalSession 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.#ctor">
            <summary>初始化 type StubIDalSession 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.BeginTransaction">
            <summary>设置 IDalSession.BeginTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.BeginTransactionBoolean">
            <summary>设置 IDalSession.BeginTransaction(Boolean openConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.BeginTransactionBooleanIsolationLevel">
            <summary>设置 IDalSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.BeginTransactionIsolationLevel">
            <summary>设置 IDalSession.BeginTransaction(IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.BeginTransactionString">
            <summary>设置 IDalSession.BeginTransaction(String connectionString) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.BeginTransactionStringBooleanIsolationLevel">
            <summary>设置 IDalSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.BeginTransactionStringIsolationLevel">
            <summary>设置 IDalSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.CloseConnection">
            <summary>设置 IDalSession.CloseConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.CommitTransaction">
            <summary>设置 IDalSession.CommitTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.CommitTransactionBoolean">
            <summary>设置 IDalSession.CommitTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.Complete">
            <summary>设置 IDalSession.Complete() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.ConnectionGet">
            <summary>设置 IDalSession.get_Connection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.CreateCommandCommandType">
            <summary>设置 IDalSession.CreateCommand(CommandType commandType) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.CreateDataAdapter">
            <summary>设置 IDalSession.CreateDataAdapter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.CreateDataAdapterIDbCommand">
            <summary>设置 IDalSession.CreateDataAdapter(IDbCommand command) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.CreateDataParameter">
            <summary>设置 IDalSession.CreateDataParameter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.DataSourceGet">
            <summary>设置 IDalSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#BeginTransaction">
            <summary>设置 IDalSession.BeginTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#BeginTransaction(System.Data.IsolationLevel)">
            <summary>设置 IDalSession.BeginTransaction(IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#BeginTransaction(System.String)">
            <summary>设置 IDalSession.BeginTransaction(String connectionString) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#BeginTransaction(System.Boolean)">
            <summary>设置 IDalSession.BeginTransaction(Boolean openConnection) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#BeginTransaction(System.String,System.Data.IsolationLevel)">
            <summary>设置 IDalSession.BeginTransaction(String connectionString, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#BeginTransaction(System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 IDalSession.BeginTransaction(Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#BeginTransaction(System.String,System.Boolean,System.Data.IsolationLevel)">
            <summary>设置 IDalSession.BeginTransaction(String connectionString, Boolean openConnection, IsolationLevel isolationLevel) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#CloseConnection">
            <summary>设置 IDalSession.CloseConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#CommitTransaction">
            <summary>设置 IDalSession.CommitTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#CommitTransaction(System.Boolean)">
            <summary>设置 IDalSession.CommitTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#Complete">
            <summary>设置 IDalSession.Complete() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#CreateCommand(System.Data.CommandType)">
            <summary>设置 IDalSession.CreateCommand(CommandType commandType) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#CreateDataAdapter">
            <summary>设置 IDalSession.CreateDataAdapter() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#CreateDataAdapter(System.Data.IDbCommand)">
            <summary>设置 IDalSession.CreateDataAdapter(IDbCommand command) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#CreateDataParameter">
            <summary>设置 IDalSession.CreateDataParameter() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#OpenConnection">
            <summary>设置 IDalSession.OpenConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#OpenConnection(System.String)">
            <summary>设置 IDalSession.OpenConnection(String connectionString) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#RollBackTransaction">
            <summary>设置 IDalSession.RollBackTransaction() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#RollBackTransaction(System.Boolean)">
            <summary>设置 IDalSession.RollBackTransaction(Boolean closeConnection) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.OpenConnection">
            <summary>设置 IDalSession.OpenConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.OpenConnectionString">
            <summary>设置 IDalSession.OpenConnection(String connectionString) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.RollBackTransaction">
            <summary>设置 IDalSession.RollBackTransaction() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.RollBackTransactionBoolean">
            <summary>设置 IDalSession.RollBackTransaction(Boolean closeConnection) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDalSession.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDalSession.TransactionGet">
            <summary>设置 IDalSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#Connection">
            <summary>设置 IDalSession.get_Connection() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#DataSource">
            <summary>设置 IDalSession.get_DataSource() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDalSession.ibnc::IBatisNet#Common#IDalSession#Transaction">
            <summary>设置 IDalSession.get_Transaction() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.StubIDataSource">
            <summary>IBatisNet.Common.IDataSource 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDataSource.#ctor">
            <summary>初始化 type StubIDataSource 的新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDataSource.AttachBackingFieldToConnectionString">
            <summary>附加委托以将 StubIDataSource.ConnectionString 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDataSource.AttachBackingFieldToDbProvider">
            <summary>附加委托以将 StubIDataSource.DbProvider 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDataSource.AttachBackingFieldToName">
            <summary>附加委托以将 StubIDataSource.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDataSource.ConnectionStringGet">
            <summary>设置 IDataSource.get_ConnectionString() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDataSource.ConnectionStringSetString">
            <summary>设置 IDataSource.set_ConnectionString(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDataSource.DbProviderGet">
            <summary>设置 IDataSource.get_DbProvider() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDataSource.DbProviderSetIDbProvider">
            <summary>设置 IDataSource.set_DbProvider(IDbProvider value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDataSource.NameGet">
            <summary>设置 IDataSource.get_Name() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDataSource.NameSetString">
            <summary>设置 IDataSource.set_Name(String value) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDataSource.ibnc::IBatisNet#Common#IDataSource#ConnectionString">
            <summary>设置 IDataSource.get_ConnectionString() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDataSource.ibnc::IBatisNet#Common#IDataSource#DbProvider">
            <summary>设置 IDataSource.get_DbProvider() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDataSource.ibnc::IBatisNet#Common#IDataSource#Name">
            <summary>设置 IDataSource.get_Name() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.StubIDbProvider">
            <summary>IBatisNet.Common.IDbProvider 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.#ctor">
            <summary>初始化 type StubIDbProvider 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.AllowMARSGet">
            <summary>设置 IDbProvider.get_AllowMARS() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.AllowMARSSetBoolean">
            <summary>设置 IDbProvider.set_AllowMARS(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.AssemblyNameGet">
            <summary>设置 IDbProvider.get_AssemblyName() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.AssemblyNameSetString">
            <summary>设置 IDbProvider.set_AssemblyName(String value) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToAllowMARS">
            <summary>附加委托以将 StubIDbProvider.AllowMARS 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToAssemblyName">
            <summary>附加委托以将 StubIDbProvider.AssemblyName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToCommandBuilderClass">
            <summary>附加委托以将 StubIDbProvider.CommandBuilderClass 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToDataAdapterClass">
            <summary>附加委托以将 StubIDbProvider.DataAdapterClass 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToDbCommandClass">
            <summary>附加委托以将 StubIDbProvider.DbCommandClass 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToDbConnectionClass">
            <summary>附加委托以将 StubIDbProvider.DbConnectionClass 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToDescription">
            <summary>附加委托以将 StubIDbProvider.Description 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToIsDefault">
            <summary>附加委托以将 StubIDbProvider.IsDefault 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToIsEnabled">
            <summary>附加委托以将 StubIDbProvider.IsEnabled 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToName">
            <summary>附加委托以将 StubIDbProvider.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToParameterDbTypeClass">
            <summary>附加委托以将 StubIDbProvider.ParameterDbTypeClass 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToParameterDbTypeProperty">
            <summary>附加委托以将 StubIDbProvider.ParameterDbTypeProperty 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToParameterPrefix">
            <summary>附加委托以将 StubIDbProvider.ParameterPrefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToSetDbParameterPrecision">
            <summary>附加委托以将 StubIDbProvider.SetDbParameterPrecision 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToSetDbParameterScale">
            <summary>附加委托以将 StubIDbProvider.SetDbParameterScale 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToSetDbParameterSize">
            <summary>附加委托以将 StubIDbProvider.SetDbParameterSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToUseDeriveParameters">
            <summary>附加委托以将 StubIDbProvider.UseDeriveParameters 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToUseParameterPrefixInParameter">
            <summary>附加委托以将 StubIDbProvider.UseParameterPrefixInParameter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToUseParameterPrefixInSql">
            <summary>附加委托以将 StubIDbProvider.UseParameterPrefixInSql 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.AttachBackingFieldToUsePositionalParameters">
            <summary>附加委托以将 StubIDbProvider.UsePositionalParameters 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.CommandBuilderClassGet">
            <summary>设置 IDbProvider.get_CommandBuilderClass() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.CommandBuilderClassSetString">
            <summary>设置 IDbProvider.set_CommandBuilderClass(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.CommandBuilderTypeGet">
            <summary>设置 IDbProvider.get_CommandBuilderType() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.CreateCommand">
            <summary>设置 IDbProvider.CreateCommand() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.CreateConnection">
            <summary>设置 IDbProvider.CreateConnection() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.CreateDataAdapter">
            <summary>设置 IDbProvider.CreateDataAdapter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.CreateDataParameter">
            <summary>设置 IDbProvider.CreateDataParameter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DataAdapterClassGet">
            <summary>设置 IDbProvider.get_DataAdapterClass() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DataAdapterClassSetString">
            <summary>设置 IDbProvider.set_DataAdapterClass(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DbCommandClassGet">
            <summary>设置 IDbProvider.get_DbCommandClass() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DbCommandClassSetString">
            <summary>设置 IDbProvider.set_DbCommandClass(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DbConnectionClassGet">
            <summary>设置 IDbProvider.get_DbConnectionClass() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DbConnectionClassSetString">
            <summary>设置 IDbProvider.set_DbConnectionClass(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DescriptionGet">
            <summary>设置 IDbProvider.get_Description() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.DescriptionSetString">
            <summary>设置 IDbProvider.set_Description(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.FormatNameForParameterString">
            <summary>设置 IDbProvider.FormatNameForParameter(String parameterName) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.FormatNameForSqlString">
            <summary>设置 IDbProvider.FormatNameForSql(String parameterName) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#CreateCommand">
            <summary>设置 IDbProvider.CreateCommand() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#CreateConnection">
            <summary>设置 IDbProvider.CreateConnection() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#CreateDataAdapter">
            <summary>设置 IDbProvider.CreateDataAdapter() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#CreateDataParameter">
            <summary>设置 IDbProvider.CreateDataParameter() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#FormatNameForParameter(System.String)">
            <summary>设置 IDbProvider.FormatNameForParameter(String parameterName) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#FormatNameForSql(System.String)">
            <summary>设置 IDbProvider.FormatNameForSql(String parameterName) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#Initialize">
            <summary>设置 IDbProvider.Initialize() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.Initialize">
            <summary>设置 IDbProvider.Initialize() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.IsDefaultGet">
            <summary>设置 IDbProvider.get_IsDefault() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.IsDefaultSetBoolean">
            <summary>设置 IDbProvider.set_IsDefault(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.IsEnabledGet">
            <summary>设置 IDbProvider.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.IsEnabledSetBoolean">
            <summary>设置 IDbProvider.set_IsEnabled(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.IsObdcGet">
            <summary>设置 IDbProvider.get_IsObdc() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.NameGet">
            <summary>设置 IDbProvider.get_Name() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.NameSetString">
            <summary>设置 IDbProvider.set_Name(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.ParameterDbTypeClassGet">
            <summary>设置 IDbProvider.get_ParameterDbTypeClass() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.ParameterDbTypeClassSetString">
            <summary>设置 IDbProvider.set_ParameterDbTypeClass(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.ParameterDbTypeGet">
            <summary>设置 IDbProvider.get_ParameterDbType() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.ParameterDbTypePropertyGet">
            <summary>设置 IDbProvider.get_ParameterDbTypeProperty() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.ParameterDbTypePropertySetString">
            <summary>设置 IDbProvider.set_ParameterDbTypeProperty(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.ParameterPrefixGet">
            <summary>设置 IDbProvider.get_ParameterPrefix() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.ParameterPrefixSetString">
            <summary>设置 IDbProvider.set_ParameterPrefix(String value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.SetDbParameterPrecisionGet">
            <summary>设置 IDbProvider.get_SetDbParameterPrecision() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.SetDbParameterPrecisionSetBoolean">
            <summary>设置 IDbProvider.set_SetDbParameterPrecision(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.SetDbParameterScaleGet">
            <summary>设置 IDbProvider.get_SetDbParameterScale() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.SetDbParameterScaleSetBoolean">
            <summary>设置 IDbProvider.set_SetDbParameterScale(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.SetDbParameterSizeGet">
            <summary>设置 IDbProvider.get_SetDbParameterSize() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.SetDbParameterSizeSetBoolean">
            <summary>设置 IDbProvider.set_SetDbParameterSize(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UseDeriveParametersGet">
            <summary>设置 IDbProvider.get_UseDeriveParameters() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UseDeriveParametersSetBoolean">
            <summary>设置 IDbProvider.set_UseDeriveParameters(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UseParameterPrefixInParameterGet">
            <summary>设置 IDbProvider.get_UseParameterPrefixInParameter() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UseParameterPrefixInParameterSetBoolean">
            <summary>设置 IDbProvider.set_UseParameterPrefixInParameter(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UseParameterPrefixInSqlGet">
            <summary>设置 IDbProvider.get_UseParameterPrefixInSql() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UseParameterPrefixInSqlSetBoolean">
            <summary>设置 IDbProvider.set_UseParameterPrefixInSql(Boolean value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UsePositionalParametersGet">
            <summary>设置 IDbProvider.get_UsePositionalParameters() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Fakes.StubIDbProvider.UsePositionalParametersSetBoolean">
            <summary>设置 IDbProvider.set_UsePositionalParameters(Boolean value) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#AllowMARS">
            <summary>设置 IDbProvider.get_AllowMARS() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#AssemblyName">
            <summary>设置 IDbProvider.get_AssemblyName() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#CommandBuilderClass">
            <summary>设置 IDbProvider.get_CommandBuilderClass() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#CommandBuilderType">
            <summary>设置 IDbProvider.get_CommandBuilderType() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#DataAdapterClass">
            <summary>设置 IDbProvider.get_DataAdapterClass() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#DbCommandClass">
            <summary>设置 IDbProvider.get_DbCommandClass() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#DbConnectionClass">
            <summary>设置 IDbProvider.get_DbConnectionClass() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#Description">
            <summary>设置 IDbProvider.get_Description() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#IsDefault">
            <summary>设置 IDbProvider.get_IsDefault() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#IsEnabled">
            <summary>设置 IDbProvider.get_IsEnabled() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#IsObdc">
            <summary>设置 IDbProvider.get_IsObdc() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#Name">
            <summary>设置 IDbProvider.get_Name() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#ParameterDbType">
            <summary>设置 IDbProvider.get_ParameterDbType() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#ParameterDbTypeClass">
            <summary>设置 IDbProvider.get_ParameterDbTypeClass() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#ParameterDbTypeProperty">
            <summary>设置 IDbProvider.get_ParameterDbTypeProperty() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#ParameterPrefix">
            <summary>设置 IDbProvider.get_ParameterPrefix() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#SetDbParameterPrecision">
            <summary>设置 IDbProvider.get_SetDbParameterPrecision() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#SetDbParameterScale">
            <summary>设置 IDbProvider.get_SetDbParameterScale() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#SetDbParameterSize">
            <summary>设置 IDbProvider.get_SetDbParameterSize() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#UseDeriveParameters">
            <summary>设置 IDbProvider.get_UseDeriveParameters() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#UseParameterPrefixInParameter">
            <summary>设置 IDbProvider.get_UseParameterPrefixInParameter() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#UseParameterPrefixInSql">
            <summary>设置 IDbProvider.get_UseParameterPrefixInSql() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubIDbProvider.ibnc::IBatisNet#Common#IDbProvider#UsePositionalParameters">
            <summary>设置 IDbProvider.get_UsePositionalParameters() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Fakes.StubProviderDeSerializer">
            <summary>IBatisNet.Common.ProviderDeSerializer 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubProviderDeSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Fakes.StubProviderDeSerializer.InitializeStub">
            <summary>初始化 type StubProviderDeSerializer 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubProviderDeSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubProviderDeSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Fakes.StubProviderDeSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler">
            <summary>IBatisNet.Common.Logging.ConfigurationSectionHandler 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.#ctor(IBatisNet.Common.Logging.ConfigurationSectionHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.Bind(System.Configuration.IConfigurationSectionHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.Constructor">
            <summary>设置 ConfigurationSectionHandler.ConfigurationSectionHandler() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.CreateObjectObjectXmlNode">
            <summary>设置 ConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.StaticConstructor">
            <summary>设置 ConfigurationSectionHandler.ConfigurationSectionHandler() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimConfigurationSectionHandler.AllInstances.CreateObjectObjectXmlNode">
            <summary>设置 ConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Fakes.ShimLogManager">
            <summary>IBatisNet.Common.Logging.LogManager 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimLogManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimLogManager.#ctor(IBatisNet.Common.Logging.LogManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimLogManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.ShimLogManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.AdapterGet">
            <summary>设置 LogManager.get_Adapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.AdapterSetILoggerFactoryAdapter">
            <summary>设置 LogManager.set_Adapter(ILoggerFactoryAdapter value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.BuildDefaultLoggerFactoryAdapter">
            <summary>设置 LogManager.BuildDefaultLoggerFactoryAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.BuildLoggerFactoryAdapter">
            <summary>设置 LogManager.BuildLoggerFactoryAdapter() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.Constructor">
            <summary>设置 LogManager.LogManager() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.GetLoggerString">
            <summary>设置 LogManager.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.GetLoggerType">
            <summary>设置 LogManager.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.ShimLogManager.StaticConstructor">
            <summary>设置 LogManager.LogManager() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Fakes.ShimLogManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Fakes.StubConfigurationSectionHandler">
            <summary>IBatisNet.Common.Logging.ConfigurationSectionHandler 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubConfigurationSectionHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubConfigurationSectionHandler.InitializeStub">
            <summary>初始化 type StubConfigurationSectionHandler 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubConfigurationSectionHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubConfigurationSectionHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubConfigurationSectionHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Fakes.StubILog">
            <summary>IBatisNet.Common.Logging.ILog 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.#ctor">
            <summary>初始化 type StubILog 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.DebugObject">
            <summary>设置 ILog.Debug(Object message) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.DebugObjectException">
            <summary>设置 ILog.Debug(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.ErrorObject">
            <summary>设置 ILog.Error(Object message) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.ErrorObjectException">
            <summary>设置 ILog.Error(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.FatalObject">
            <summary>设置 ILog.Fatal(Object message) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.FatalObjectException">
            <summary>设置 ILog.Fatal(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Debug(System.Object)">
            <summary>设置 ILog.Debug(Object message) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Debug(System.Object,System.Exception)">
            <summary>设置 ILog.Debug(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Error(System.Object)">
            <summary>设置 ILog.Error(Object message) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Error(System.Object,System.Exception)">
            <summary>设置 ILog.Error(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Fatal(System.Object)">
            <summary>设置 ILog.Fatal(Object message) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Fatal(System.Object,System.Exception)">
            <summary>设置 ILog.Fatal(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Info(System.Object)">
            <summary>设置 ILog.Info(Object message) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Info(System.Object,System.Exception)">
            <summary>设置 ILog.Info(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Warn(System.Object)">
            <summary>设置 ILog.Warn(Object message) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#Warn(System.Object,System.Exception)">
            <summary>设置 ILog.Warn(Object message, Exception exception) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.InfoObject">
            <summary>设置 ILog.Info(Object message) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.InfoObjectException">
            <summary>设置 ILog.Info(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.IsDebugEnabledGet">
            <summary>设置 ILog.get_IsDebugEnabled() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.IsErrorEnabledGet">
            <summary>设置 ILog.get_IsErrorEnabled() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.IsFatalEnabledGet">
            <summary>设置 ILog.get_IsFatalEnabled() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.IsInfoEnabledGet">
            <summary>设置 ILog.get_IsInfoEnabled() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.IsWarnEnabledGet">
            <summary>设置 ILog.get_IsWarnEnabled() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.WarnObject">
            <summary>设置 ILog.Warn(Object message) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILog.WarnObjectException">
            <summary>设置 ILog.Warn(Object message, Exception exception) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#IsDebugEnabled">
            <summary>设置 ILog.get_IsDebugEnabled() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#IsErrorEnabled">
            <summary>设置 ILog.get_IsErrorEnabled() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#IsFatalEnabled">
            <summary>设置 ILog.get_IsFatalEnabled() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#IsInfoEnabled">
            <summary>设置 ILog.get_IsInfoEnabled() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Fakes.StubILog.ibnc::IBatisNet#Common#Logging#ILog#IsWarnEnabled">
            <summary>设置 ILog.get_IsWarnEnabled() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Fakes.StubILoggerFactoryAdapter">
            <summary>IBatisNet.Common.Logging.ILoggerFactoryAdapter 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILoggerFactoryAdapter.#ctor">
            <summary>初始化 type StubILoggerFactoryAdapter 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILoggerFactoryAdapter.GetLoggerString">
            <summary>设置 ILoggerFactoryAdapter.GetLogger(String name) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Logging.Fakes.StubILoggerFactoryAdapter.GetLoggerType">
            <summary>设置 ILoggerFactoryAdapter.GetLogger(Type type) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILoggerFactoryAdapter.ibnc::IBatisNet#Common#Logging#ILoggerFactoryAdapter#GetLogger(System.String)">
            <summary>设置 ILoggerFactoryAdapter.GetLogger(String name) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Fakes.StubILoggerFactoryAdapter.ibnc::IBatisNet#Common#Logging#ILoggerFactoryAdapter#GetLogger(System.Type)">
            <summary>设置 ILoggerFactoryAdapter.GetLogger(Type type) 的 存根</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger">
            <summary>IBatisNet.Common.Logging.Impl.ConsoleOutLogger 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.#ctor(IBatisNet.Common.Logging.Impl.ConsoleOutLogger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.Bind(IBatisNet.Common.Logging.ILog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.ConstructorStringLogLevelBooleanBooleanString">
            <summary>设置 ConsoleOutLogger.ConsoleOutLogger(String logName, LogLevel logLevel, Boolean showDateTime, Boolean showLogName, String dateTimeFormat) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.DebugObject">
            <summary>设置 ConsoleOutLogger.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.DebugObjectException">
            <summary>设置 ConsoleOutLogger.Debug(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.ErrorObject">
            <summary>设置 ConsoleOutLogger.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.ErrorObjectException">
            <summary>设置 ConsoleOutLogger.Error(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.FatalObject">
            <summary>设置 ConsoleOutLogger.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.FatalObjectException">
            <summary>设置 ConsoleOutLogger.Fatal(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.InfoObject">
            <summary>设置 ConsoleOutLogger.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.InfoObjectException">
            <summary>设置 ConsoleOutLogger.Info(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.IsDebugEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.IsErrorEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.IsFatalEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.IsInfoEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.IsLevelEnabledLogLevel">
            <summary>设置 ConsoleOutLogger.IsLevelEnabled(LogLevel level) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.IsWarnEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.WarnObject">
            <summary>设置 ConsoleOutLogger.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.WarnObjectException">
            <summary>设置 ConsoleOutLogger.Warn(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.WriteLogLevelObjectException">
            <summary>设置 ConsoleOutLogger.Write(LogLevel level, Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.DebugObject">
            <summary>设置 ConsoleOutLogger.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.DebugObjectException">
            <summary>设置 ConsoleOutLogger.Debug(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.ErrorObject">
            <summary>设置 ConsoleOutLogger.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.ErrorObjectException">
            <summary>设置 ConsoleOutLogger.Error(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.FatalObject">
            <summary>设置 ConsoleOutLogger.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.FatalObjectException">
            <summary>设置 ConsoleOutLogger.Fatal(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.InfoObject">
            <summary>设置 ConsoleOutLogger.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.InfoObjectException">
            <summary>设置 ConsoleOutLogger.Info(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.IsDebugEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.IsErrorEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.IsFatalEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.IsInfoEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.IsLevelEnabledLogLevel">
            <summary>设置 ConsoleOutLogger.IsLevelEnabled(LogLevel level) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.IsWarnEnabledGet">
            <summary>设置 ConsoleOutLogger.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.WarnObject">
            <summary>设置 ConsoleOutLogger.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.WarnObjectException">
            <summary>设置 ConsoleOutLogger.Warn(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLogger.AllInstances.WriteLogLevelObjectException">
            <summary>设置 ConsoleOutLogger.Write(LogLevel level, Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA">
            <summary>IBatisNet.Common.Logging.Impl.ConsoleOutLoggerFA 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.#ctor(IBatisNet.Common.Logging.Impl.ConsoleOutLoggerFA)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.Bind(IBatisNet.Common.Logging.ILoggerFactoryAdapter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.ConstructorNameValueCollection">
            <summary>设置 ConsoleOutLoggerFA.ConsoleOutLoggerFA(NameValueCollection properties) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.GetLoggerString">
            <summary>设置 ConsoleOutLoggerFA.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.GetLoggerType">
            <summary>设置 ConsoleOutLoggerFA.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.AllInstances.GetLoggerString">
            <summary>设置 ConsoleOutLoggerFA.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimConsoleOutLoggerFA.AllInstances.GetLoggerType">
            <summary>设置 ConsoleOutLoggerFA.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger">
            <summary>IBatisNet.Common.Logging.Impl.NoOpLogger 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.#ctor(IBatisNet.Common.Logging.Impl.NoOpLogger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.Bind(IBatisNet.Common.Logging.ILog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.Constructor">
            <summary>设置 NoOpLogger.NoOpLogger() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.DebugObject">
            <summary>设置 NoOpLogger.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.DebugObjectException">
            <summary>设置 NoOpLogger.Debug(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.ErrorObject">
            <summary>设置 NoOpLogger.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.ErrorObjectException">
            <summary>设置 NoOpLogger.Error(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.FatalObject">
            <summary>设置 NoOpLogger.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.FatalObjectException">
            <summary>设置 NoOpLogger.Fatal(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.InfoObject">
            <summary>设置 NoOpLogger.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.InfoObjectException">
            <summary>设置 NoOpLogger.Info(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.IsDebugEnabledGet">
            <summary>设置 NoOpLogger.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.IsErrorEnabledGet">
            <summary>设置 NoOpLogger.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.IsFatalEnabledGet">
            <summary>设置 NoOpLogger.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.IsInfoEnabledGet">
            <summary>设置 NoOpLogger.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.IsTraceEnabledGet">
            <summary>设置 NoOpLogger.get_IsTraceEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.IsWarnEnabledGet">
            <summary>设置 NoOpLogger.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.TraceObject">
            <summary>设置 NoOpLogger.Trace(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.TraceObjectException">
            <summary>设置 NoOpLogger.Trace(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.WarnObject">
            <summary>设置 NoOpLogger.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.WarnObjectException">
            <summary>设置 NoOpLogger.Warn(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.DebugObject">
            <summary>设置 NoOpLogger.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.DebugObjectException">
            <summary>设置 NoOpLogger.Debug(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.ErrorObject">
            <summary>设置 NoOpLogger.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.ErrorObjectException">
            <summary>设置 NoOpLogger.Error(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.FatalObject">
            <summary>设置 NoOpLogger.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.FatalObjectException">
            <summary>设置 NoOpLogger.Fatal(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.InfoObject">
            <summary>设置 NoOpLogger.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.InfoObjectException">
            <summary>设置 NoOpLogger.Info(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.IsDebugEnabledGet">
            <summary>设置 NoOpLogger.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.IsErrorEnabledGet">
            <summary>设置 NoOpLogger.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.IsFatalEnabledGet">
            <summary>设置 NoOpLogger.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.IsInfoEnabledGet">
            <summary>设置 NoOpLogger.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.IsTraceEnabledGet">
            <summary>设置 NoOpLogger.get_IsTraceEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.IsWarnEnabledGet">
            <summary>设置 NoOpLogger.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.TraceObject">
            <summary>设置 NoOpLogger.Trace(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.TraceObjectException">
            <summary>设置 NoOpLogger.Trace(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.WarnObject">
            <summary>设置 NoOpLogger.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLogger.AllInstances.WarnObjectException">
            <summary>设置 NoOpLogger.Warn(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA">
            <summary>IBatisNet.Common.Logging.Impl.NoOpLoggerFA 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.#ctor(IBatisNet.Common.Logging.Impl.NoOpLoggerFA)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.Bind(IBatisNet.Common.Logging.ILoggerFactoryAdapter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.Constructor">
            <summary>设置 NoOpLoggerFA.NoOpLoggerFA() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.ConstructorNameValueCollection">
            <summary>设置 NoOpLoggerFA.NoOpLoggerFA(NameValueCollection properties) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.GetLoggerType">
            <summary>设置 NoOpLoggerFA.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.IBatisNetCommonLoggingILoggerFactoryAdapterGetLoggerString">
            <summary>设置 NoOpLoggerFA.IBatisNet.Common.Logging.ILoggerFactoryAdapter.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.AllInstances.GetLoggerType">
            <summary>设置 NoOpLoggerFA.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimNoOpLoggerFA.AllInstances.IBatisNetCommonLoggingILoggerFactoryAdapterGetLoggerString">
            <summary>设置 NoOpLoggerFA.IBatisNet.Common.Logging.ILoggerFactoryAdapter.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger">
            <summary>IBatisNet.Common.Logging.Impl.TraceLogger 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.#ctor(IBatisNet.Common.Logging.Impl.TraceLogger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.Bind(IBatisNet.Common.Logging.ILog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.ConstructorStringLogLevelBooleanBooleanString">
            <summary>设置 TraceLogger.TraceLogger(String logName, LogLevel logLevel, Boolean showDateTime, Boolean showLogName, String dateTimeFormat) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.DebugObject">
            <summary>设置 TraceLogger.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.DebugObjectException">
            <summary>设置 TraceLogger.Debug(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.ErrorObject">
            <summary>设置 TraceLogger.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.ErrorObjectException">
            <summary>设置 TraceLogger.Error(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.FatalObject">
            <summary>设置 TraceLogger.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.FatalObjectException">
            <summary>设置 TraceLogger.Fatal(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.InfoObject">
            <summary>设置 TraceLogger.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.InfoObjectException">
            <summary>设置 TraceLogger.Info(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.IsDebugEnabledGet">
            <summary>设置 TraceLogger.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.IsErrorEnabledGet">
            <summary>设置 TraceLogger.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.IsFatalEnabledGet">
            <summary>设置 TraceLogger.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.IsInfoEnabledGet">
            <summary>设置 TraceLogger.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.IsLevelEnabledLogLevel">
            <summary>设置 TraceLogger.IsLevelEnabled(LogLevel level) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.IsWarnEnabledGet">
            <summary>设置 TraceLogger.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.WarnObject">
            <summary>设置 TraceLogger.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.WarnObjectException">
            <summary>设置 TraceLogger.Warn(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.WriteLogLevelObjectException">
            <summary>设置 TraceLogger.Write(LogLevel level, Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.DebugObject">
            <summary>设置 TraceLogger.Debug(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.DebugObjectException">
            <summary>设置 TraceLogger.Debug(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.ErrorObject">
            <summary>设置 TraceLogger.Error(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.ErrorObjectException">
            <summary>设置 TraceLogger.Error(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.FatalObject">
            <summary>设置 TraceLogger.Fatal(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.FatalObjectException">
            <summary>设置 TraceLogger.Fatal(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.InfoObject">
            <summary>设置 TraceLogger.Info(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.InfoObjectException">
            <summary>设置 TraceLogger.Info(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.IsDebugEnabledGet">
            <summary>设置 TraceLogger.get_IsDebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.IsErrorEnabledGet">
            <summary>设置 TraceLogger.get_IsErrorEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.IsFatalEnabledGet">
            <summary>设置 TraceLogger.get_IsFatalEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.IsInfoEnabledGet">
            <summary>设置 TraceLogger.get_IsInfoEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.IsLevelEnabledLogLevel">
            <summary>设置 TraceLogger.IsLevelEnabled(LogLevel level) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.IsWarnEnabledGet">
            <summary>设置 TraceLogger.get_IsWarnEnabled() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.WarnObject">
            <summary>设置 TraceLogger.Warn(Object message) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.WarnObjectException">
            <summary>设置 TraceLogger.Warn(Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLogger.AllInstances.WriteLogLevelObjectException">
            <summary>设置 TraceLogger.Write(LogLevel level, Object message, Exception e) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA">
            <summary>IBatisNet.Common.Logging.Impl.TraceLoggerFA 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.#ctor(IBatisNet.Common.Logging.Impl.TraceLoggerFA)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.Bind(IBatisNet.Common.Logging.ILoggerFactoryAdapter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.ConstructorNameValueCollection">
            <summary>设置 TraceLoggerFA.TraceLoggerFA(NameValueCollection properties) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.GetLoggerString">
            <summary>设置 TraceLoggerFA.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.GetLoggerType">
            <summary>设置 TraceLoggerFA.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.AllInstances.GetLoggerString">
            <summary>设置 TraceLoggerFA.GetLogger(String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.ShimTraceLoggerFA.AllInstances.GetLoggerType">
            <summary>设置 TraceLoggerFA.GetLogger(Type type) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLogger">
            <summary>IBatisNet.Common.Logging.Impl.ConsoleOutLogger 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLogger.#ctor(System.String,IBatisNet.Common.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLogger.InitializeStub">
            <summary>初始化 type StubConsoleOutLogger 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLogger.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLogger.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLogger.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLoggerFA">
            <summary>IBatisNet.Common.Logging.Impl.ConsoleOutLoggerFA 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLoggerFA.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLoggerFA.InitializeStub">
            <summary>初始化 type StubConsoleOutLoggerFA 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLoggerFA.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLoggerFA.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubConsoleOutLoggerFA.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLogger">
            <summary>IBatisNet.Common.Logging.Impl.TraceLogger 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLogger.#ctor(System.String,IBatisNet.Common.Logging.LogLevel,System.Boolean,System.Boolean,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLogger.InitializeStub">
            <summary>初始化 type StubTraceLogger 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLogger.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLogger.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLogger.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLoggerFA">
            <summary>IBatisNet.Common.Logging.Impl.TraceLoggerFA 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLoggerFA.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLoggerFA.InitializeStub">
            <summary>初始化 type StubTraceLoggerFA 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLoggerFA.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLoggerFA.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Logging.Impl.Fakes.StubTraceLoggerFA.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList">
            <summary>IBatisNet.Common.Pagination.PaginatedArrayList 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.#ctor(IBatisNet.Common.Pagination.PaginatedArrayList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Bind(IBatisNet.Common.Pagination.IPaginatedList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AddObject">
            <summary>设置 PaginatedArrayList.Add(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Clear">
            <summary>设置 PaginatedArrayList.Clear() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.ConstructorICollectionInt32">
            <summary>设置 PaginatedArrayList.PaginatedArrayList(ICollection c, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.ConstructorInt32">
            <summary>设置 PaginatedArrayList.PaginatedArrayList(Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.ConstructorInt32Int32">
            <summary>设置 PaginatedArrayList.PaginatedArrayList(Int32 initialCapacity, Int32 pageSize) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.ContainsObject">
            <summary>设置 PaginatedArrayList.Contains(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.CopyToArrayInt32">
            <summary>设置 PaginatedArrayList.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.CountGet">
            <summary>设置 PaginatedArrayList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.CurrentGet">
            <summary>设置 PaginatedArrayList.get_Current() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.GetEnumerator">
            <summary>设置 PaginatedArrayList.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.GotoPageInt32">
            <summary>设置 PaginatedArrayList.GotoPage(Int32 pageIndex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IndexOfObject">
            <summary>设置 PaginatedArrayList.IndexOf(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.InsertInt32Object">
            <summary>设置 PaginatedArrayList.Insert(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsEmptyGet">
            <summary>设置 PaginatedArrayList.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsFirstPageGet">
            <summary>设置 PaginatedArrayList.get_IsFirstPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsFixedSizeGet">
            <summary>设置 PaginatedArrayList.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsLastPageGet">
            <summary>设置 PaginatedArrayList.get_IsLastPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsMiddlePageGet">
            <summary>设置 PaginatedArrayList.get_IsMiddlePage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsNextPageAvailableGet">
            <summary>设置 PaginatedArrayList.get_IsNextPageAvailable() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsPreviousPageAvailableGet">
            <summary>设置 PaginatedArrayList.get_IsPreviousPageAvailable() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsReadOnlyGet">
            <summary>设置 PaginatedArrayList.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.IsSynchronizedGet">
            <summary>设置 PaginatedArrayList.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.ItemGetInt32">
            <summary>设置 PaginatedArrayList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.ItemSetInt32Object">
            <summary>设置 PaginatedArrayList.set_Item(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.MoveNext">
            <summary>设置 PaginatedArrayList.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.NextPage">
            <summary>设置 PaginatedArrayList.NextPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.PageIndexGet">
            <summary>设置 PaginatedArrayList.get_PageIndex() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.PageSizeGet">
            <summary>设置 PaginatedArrayList.get_PageSize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.PreviousPage">
            <summary>设置 PaginatedArrayList.PreviousPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.RemoveAtInt32">
            <summary>设置 PaginatedArrayList.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.RemoveObject">
            <summary>设置 PaginatedArrayList.Remove(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Repaginate">
            <summary>设置 PaginatedArrayList.Repaginate() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.Reset">
            <summary>设置 PaginatedArrayList.Reset() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.StaticConstructor">
            <summary>设置 PaginatedArrayList.PaginatedArrayList() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.SubListIListInt32Int32">
            <summary>设置 PaginatedArrayList.SubList(IList list, Int32 fromIndex, Int32 toIndex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.SyncRootGet">
            <summary>设置 PaginatedArrayList.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.AddObject">
            <summary>设置 PaginatedArrayList.Add(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.Clear">
            <summary>设置 PaginatedArrayList.Clear() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.ContainsObject">
            <summary>设置 PaginatedArrayList.Contains(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.CopyToArrayInt32">
            <summary>设置 PaginatedArrayList.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.CountGet">
            <summary>设置 PaginatedArrayList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.CurrentGet">
            <summary>设置 PaginatedArrayList.get_Current() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.GetEnumerator">
            <summary>设置 PaginatedArrayList.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.GotoPageInt32">
            <summary>设置 PaginatedArrayList.GotoPage(Int32 pageIndex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IndexOfObject">
            <summary>设置 PaginatedArrayList.IndexOf(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.InsertInt32Object">
            <summary>设置 PaginatedArrayList.Insert(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsEmptyGet">
            <summary>设置 PaginatedArrayList.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsFirstPageGet">
            <summary>设置 PaginatedArrayList.get_IsFirstPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsFixedSizeGet">
            <summary>设置 PaginatedArrayList.get_IsFixedSize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsLastPageGet">
            <summary>设置 PaginatedArrayList.get_IsLastPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsMiddlePageGet">
            <summary>设置 PaginatedArrayList.get_IsMiddlePage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsNextPageAvailableGet">
            <summary>设置 PaginatedArrayList.get_IsNextPageAvailable() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsPreviousPageAvailableGet">
            <summary>设置 PaginatedArrayList.get_IsPreviousPageAvailable() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsReadOnlyGet">
            <summary>设置 PaginatedArrayList.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.IsSynchronizedGet">
            <summary>设置 PaginatedArrayList.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.ItemGetInt32">
            <summary>设置 PaginatedArrayList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.ItemSetInt32Object">
            <summary>设置 PaginatedArrayList.set_Item(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.MoveNext">
            <summary>设置 PaginatedArrayList.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.NextPage">
            <summary>设置 PaginatedArrayList.NextPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.PageIndexGet">
            <summary>设置 PaginatedArrayList.get_PageIndex() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.PageSizeGet">
            <summary>设置 PaginatedArrayList.get_PageSize() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.PreviousPage">
            <summary>设置 PaginatedArrayList.PreviousPage() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.RemoveAtInt32">
            <summary>设置 PaginatedArrayList.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.RemoveObject">
            <summary>设置 PaginatedArrayList.Remove(Object value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.Repaginate">
            <summary>设置 PaginatedArrayList.Repaginate() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.Reset">
            <summary>设置 PaginatedArrayList.Reset() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.SubListIListInt32Int32">
            <summary>设置 PaginatedArrayList.SubList(IList list, Int32 fromIndex, Int32 toIndex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.ShimPaginatedArrayList.AllInstances.SyncRootGet">
            <summary>设置 PaginatedArrayList.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList">
            <summary>IBatisNet.Common.Pagination.IPaginatedList 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.#ctor">
            <summary>初始化 type StubIPaginatedList 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.AddObject">
            <summary>设置 IList.Add(Object value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.Clear">
            <summary>设置 IList.Clear() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ContainsObject">
            <summary>设置 IList.Contains(Object value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.CopyToArrayInt32">
            <summary>设置 ICollection.CopyTo(Array array, Int32 index) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.CountGet">
            <summary>设置 ICollection.get_Count() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.CurrentGet">
            <summary>设置 IEnumerator.get_Current() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.GetEnumerator">
            <summary>设置 IEnumerable.GetEnumerator() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.GotoPageInt32">
            <summary>设置 IPaginatedList.GotoPage(Int32 pageIndex) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#GotoPage(System.Int32)">
            <summary>设置 IPaginatedList.GotoPage(Int32 pageIndex) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#NextPage">
            <summary>设置 IPaginatedList.NextPage() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#PreviousPage">
            <summary>设置 IPaginatedList.PreviousPage() 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IndexOfObject">
            <summary>设置 IList.IndexOf(Object value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.InsertInt32Object">
            <summary>设置 IList.Insert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsFirstPageGet">
            <summary>设置 IPaginatedList.get_IsFirstPage() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsFixedSizeGet">
            <summary>设置 IList.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsLastPageGet">
            <summary>设置 IPaginatedList.get_IsLastPage() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsMiddlePageGet">
            <summary>设置 IPaginatedList.get_IsMiddlePage() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsNextPageAvailableGet">
            <summary>设置 IPaginatedList.get_IsNextPageAvailable() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsPreviousPageAvailableGet">
            <summary>设置 IPaginatedList.get_IsPreviousPageAvailable() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsReadOnlyGet">
            <summary>设置 IList.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.IsSynchronizedGet">
            <summary>设置 ICollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ItemGetInt32">
            <summary>设置 IList.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ItemSetInt32Object">
            <summary>设置 IList.set_Item(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.MoveNext">
            <summary>设置 IEnumerator.MoveNext() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.NextPage">
            <summary>设置 IPaginatedList.NextPage() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.PageIndexGet">
            <summary>设置 IPaginatedList.get_PageIndex() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.PageSizeGet">
            <summary>设置 IPaginatedList.get_PageSize() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.PreviousPage">
            <summary>设置 IPaginatedList.PreviousPage() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.RemoveAtInt32">
            <summary>设置 IList.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.RemoveObject">
            <summary>设置 IList.Remove(Object value) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.Reset">
            <summary>设置 IEnumerator.Reset() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.SyncRootGet">
            <summary>设置 ICollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>设置 ICollection.CopyTo(Array array, Int32 index) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>设置 IEnumerable.GetEnumerator() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IEnumerator#MoveNext">
            <summary>设置 IEnumerator.MoveNext() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IEnumerator#Reset">
            <summary>设置 IEnumerator.Reset() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#Add(System.Object)">
            <summary>设置 IList.Add(Object value) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#Clear">
            <summary>设置 IList.Clear() 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#Contains(System.Object)">
            <summary>设置 IList.Contains(Object value) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#IndexOf(System.Object)">
            <summary>设置 IList.IndexOf(Object value) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>设置 IList.Insert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#Remove(System.Object)">
            <summary>设置 IList.Remove(Object value) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#RemoveAt(System.Int32)">
            <summary>设置 IList.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#ICollection#Count">
            <summary>设置 ICollection.get_Count() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IEnumerator#Current">
            <summary>设置 IEnumerator.get_Current() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#IsFirstPage">
            <summary>设置 IPaginatedList.get_IsFirstPage() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#IsFixedSize">
            <summary>设置 IList.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#IsLastPage">
            <summary>设置 IPaginatedList.get_IsLastPage() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#IsMiddlePage">
            <summary>设置 IPaginatedList.get_IsMiddlePage() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#IsNextPageAvailable">
            <summary>设置 IPaginatedList.get_IsNextPageAvailable() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#IsPreviousPageAvailable">
            <summary>设置 IPaginatedList.get_IsPreviousPageAvailable() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#IList#IsReadOnly">
            <summary>设置 IList.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#ICollection#IsSynchronized">
            <summary>设置 ICollection.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.System#Collections#IList#Item(System.Int32)">
            <summary>设置 IList.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#PageIndex">
            <summary>设置 IPaginatedList.get_PageIndex() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.ibnc::IBatisNet#Common#Pagination#IPaginatedList#PageSize">
            <summary>设置 IPaginatedList.get_PageSize() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubIPaginatedList.global::System#Collections#ICollection#SyncRoot">
            <summary>设置 ICollection.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList">
            <summary>IBatisNet.Common.Pagination.PaginatedArrayList 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList.#ctor(System.Collections.ICollection,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList.InitializeStub">
            <summary>初始化 type StubPaginatedArrayList 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Pagination.Fakes.StubPaginatedArrayList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Transaction.Fakes.ShimTransactionOptions">
            <summary>IBatisNet.Common.Transaction.TransactionOptions 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:IBatisNet.Common.Transaction.Fakes.ShimTransactionOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope">
            <summary>IBatisNet.Common.Transaction.TransactionScope 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.#ctor(IBatisNet.Common.Transaction.TransactionScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.Close">
            <summary>设置 TransactionScope.Close() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.Complete">
            <summary>设置 TransactionScope.Complete() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.ConsistentSetBoolean">
            <summary>设置 TransactionScope.set_Consistent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.Constructor">
            <summary>设置 TransactionScope.TransactionScope() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.ConstructorTransactionScopeOptions">
            <summary>设置 TransactionScope.TransactionScope(TransactionScopeOptions txScopeOptions) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.ConstructorTransactionScopeOptionsTransactionOptions">
            <summary>设置 TransactionScope.TransactionScope(TransactionScopeOptions txScopeOptions, TransactionOptions options) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.Dispose">
            <summary>设置 TransactionScope.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.EnterTransactionContext">
            <summary>设置 TransactionScope.EnterTransactionContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.IsInTransactionGet">
            <summary>设置 TransactionScope.get_IsInTransaction() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.IsVoteCommitGet">
            <summary>设置 TransactionScope.get_IsVoteCommit() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.IsolationLevel2TransactionIsolationLevelIsolationLevel">
            <summary>设置 TransactionScope.IsolationLevel2TransactionIsolationLevel(IsolationLevel isolation) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.StaticConstructor">
            <summary>设置 TransactionScope.TransactionScope() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.TransactionScopeCountGet">
            <summary>设置 TransactionScope.get_TransactionScopeCount() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.TransactionScopeCountSetInt32">
            <summary>设置 TransactionScope.set_TransactionScopeCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.TransactionScopeOptions2TransactionOptionTransactionScopeOptions">
            <summary>设置 TransactionScope.TransactionScopeOptions2TransactionOption(TransactionScopeOptions transactionScopeOptions) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.Close">
            <summary>设置 TransactionScope.Close() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.Complete">
            <summary>设置 TransactionScope.Complete() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.ConsistentSetBoolean">
            <summary>设置 TransactionScope.set_Consistent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.Dispose">
            <summary>设置 TransactionScope.Dispose() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.EnterTransactionContext">
            <summary>设置 TransactionScope.EnterTransactionContext() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.IsVoteCommitGet">
            <summary>设置 TransactionScope.get_IsVoteCommit() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.IsolationLevel2TransactionIsolationLevelIsolationLevel">
            <summary>设置 TransactionScope.IsolationLevel2TransactionIsolationLevel(IsolationLevel isolation) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.TransactionScopeCountGet">
            <summary>设置 TransactionScope.get_TransactionScopeCount() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.TransactionScopeCountSetInt32">
            <summary>设置 TransactionScope.set_TransactionScopeCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.ShimTransactionScope.AllInstances.TransactionScopeOptions2TransactionOptionTransactionScopeOptions">
            <summary>设置 TransactionScope.TransactionScopeOptions2TransactionOption(TransactionScopeOptions transactionScopeOptions) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Transaction.Fakes.StubTransactionScope">
            <summary>IBatisNet.Common.Transaction.TransactionScope 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.StubTransactionScope.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.StubTransactionScope.#ctor(IBatisNet.Common.Transaction.TransactionScopeOptions)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.StubTransactionScope.#ctor(IBatisNet.Common.Transaction.TransactionScopeOptions,IBatisNet.Common.Transaction.TransactionOptions)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Transaction.Fakes.StubTransactionScope.InitializeStub">
            <summary>初始化 type StubTransactionScope 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.StubTransactionScope.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.StubTransactionScope.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Transaction.Fakes.StubTransactionScope.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler">
            <summary>IBatisNet.Common.Utilities.ConfigWatcherHandler 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.#ctor(IBatisNet.Common.Utilities.ConfigWatcherHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.AddFileToWatchFileInfo">
            <summary>设置 ConfigWatcherHandler.AddFileToWatch(FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.ClearFilesMonitored">
            <summary>设置 ConfigWatcherHandler.ClearFilesMonitored() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.ConfigWatcherHandler_OnChangedObjectFileSystemEventArgs">
            <summary>设置 ConfigWatcherHandler.ConfigWatcherHandler_OnChanged(Object source, FileSystemEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.ConfigWatcherHandler_OnRenamedObjectRenamedEventArgs">
            <summary>设置 ConfigWatcherHandler.ConfigWatcherHandler_OnRenamed(Object source, RenamedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.StaticConstructor">
            <summary>设置 ConfigWatcherHandler.ConfigWatcherHandler() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.AllInstances.ConfigWatcherHandler_OnChangedObjectFileSystemEventArgs">
            <summary>设置 ConfigWatcherHandler.ConfigWatcherHandler_OnChanged(Object source, FileSystemEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimConfigWatcherHandler.AllInstances.ConfigWatcherHandler_OnRenamedObjectRenamedEventArgs">
            <summary>设置 ConfigWatcherHandler.ConfigWatcherHandler_OnRenamed(Object source, RenamedEventArgs e) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache">
            <summary>IBatisNet.Common.Utilities.DBHelperParameterCache 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.#ctor(IBatisNet.Common.Utilities.DBHelperParameterCache)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.CacheParameterSetStringStringIDataParameterArray">
            <summary>设置 DBHelperParameterCache.CacheParameterSet(String connectionString, String commandText, IDataParameter[] commandParameters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.Clear">
            <summary>设置 DBHelperParameterCache.Clear() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.CloneParametersIDataParameterArray">
            <summary>设置 DBHelperParameterCache.CloneParameters(IDataParameter[] originalParameters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.Constructor">
            <summary>设置 DBHelperParameterCache.DBHelperParameterCache() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.DeriveParametersIDbProviderIDbCommand">
            <summary>设置 DBHelperParameterCache.DeriveParameters(IDbProvider provider, IDbCommand command) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.DiscoverSpParameterSetIDalSessionStringBoolean">
            <summary>设置 DBHelperParameterCache.DiscoverSpParameterSet(IDalSession session, String spName, Boolean includeReturnValueParameter) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.GetCachedParameterSetStringString">
            <summary>设置 DBHelperParameterCache.GetCachedParameterSet(String connectionString, String commandText) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.GetSpParameterSetIDalSessionString">
            <summary>设置 DBHelperParameterCache.GetSpParameterSet(IDalSession session, String spName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.GetSpParameterSetIDalSessionStringBoolean">
            <summary>设置 DBHelperParameterCache.GetSpParameterSet(IDalSession session, String spName, Boolean includeReturnValueParameter) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.InternalDiscoverSpParameterSetIDalSessionStringBoolean">
            <summary>设置 DBHelperParameterCache.InternalDiscoverSpParameterSet(IDalSession session, String spName, Boolean includeReturnValueParameter) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.StaticConstructor">
            <summary>设置 DBHelperParameterCache.DBHelperParameterCache() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimDBHelperParameterCache.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider">
            <summary>IBatisNet.Common.Utilities.HashCodeProvider 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.#ctor(IBatisNet.Common.Utilities.HashCodeProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.Constructor">
            <summary>设置 HashCodeProvider.HashCodeProvider() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.GetIdentityHashCodeObject">
            <summary>设置 HashCodeProvider.GetIdentityHashCode(Object obj) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimHashCodeProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimResources">
            <summary>IBatisNet.Common.Utilities.Resources 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimResources.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimResources.#ctor(IBatisNet.Common.Utilities.Resources)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimResources.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimResources.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.ApplicationBaseGet">
            <summary>设置 Resources.get_ApplicationBase() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.BaseDirectoryGet">
            <summary>设置 Resources.get_BaseDirectory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.Constructor">
            <summary>设置 Resources.Resources() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.FileExistsString">
            <summary>设置 Resources.FileExists(String filePath) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetAsXmlDocumentXmlNodeNameValueCollection">
            <summary>设置 Resources.GetAsXmlDocument(XmlNode node, NameValueCollection properties) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetConfigAsXmlDocumentString">
            <summary>设置 Resources.GetConfigAsXmlDocument(String resourcePath) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetEmbeddedResourceAsXmlDocumentString">
            <summary>设置 Resources.GetEmbeddedResourceAsXmlDocument(String resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetFileInfoAsXmlDocumentFileInfo">
            <summary>设置 Resources.GetFileInfoAsXmlDocument(FileInfo resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetFileInfoString">
            <summary>设置 Resources.GetFileInfo(String resourcePath) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetFileSystemResourceWithoutProtocolString">
            <summary>设置 Resources.GetFileSystemResourceWithoutProtocol(String filePath) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetResourceAsXmlDocumentString">
            <summary>设置 Resources.GetResourceAsXmlDocument(String resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetStreamAsXmlDocumentStream">
            <summary>设置 Resources.GetStreamAsXmlDocument(Stream resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetUriAsXmlDocumentUri">
            <summary>设置 Resources.GetUriAsXmlDocument(Uri resource) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetUrlAsXmlDocumentString">
            <summary>设置 Resources.GetUrlAsXmlDocument(String url) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.GetValueOfNodeResourceUrlXmlNodeNameValueCollection">
            <summary>设置 Resources.GetValueOfNodeResourceUrl(XmlNode node, NameValueCollection properties) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.StaticConstructor">
            <summary>设置 Resources.Resources() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimResources.TypeForNameString">
            <summary>设置 Resources.TypeForName(String typeName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimResources.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner">
            <summary>IBatisNet.Common.Utilities.ScriptRunner 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.#ctor(IBatisNet.Common.Utilities.ScriptRunner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.Constructor">
            <summary>设置 ScriptRunner.ScriptRunner() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.ExecuteStatementsIDataSourceArrayList">
            <summary>设置 ScriptRunner.ExecuteStatements(IDataSource dataSource, ArrayList sqlStatements) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.ParseScriptString">
            <summary>设置 ScriptRunner.ParseScript(String script) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.RunScriptIDataSourceString">
            <summary>设置 ScriptRunner.RunScript(IDataSource dataSource, String sqlScriptPath) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.RunScriptIDataSourceStringBoolean">
            <summary>设置 ScriptRunner.RunScript(IDataSource dataSource, String sqlScriptPath, Boolean doParse) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.AllInstances.ExecuteStatementsIDataSourceArrayList">
            <summary>设置 ScriptRunner.ExecuteStatements(IDataSource dataSource, ArrayList sqlStatements) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.AllInstances.ParseScriptString">
            <summary>设置 ScriptRunner.ParseScript(String script) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.AllInstances.RunScriptIDataSourceString">
            <summary>设置 ScriptRunner.RunScript(IDataSource dataSource, String sqlScriptPath) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimScriptRunner.AllInstances.RunScriptIDataSourceStringBoolean">
            <summary>设置 ScriptRunner.RunScript(IDataSource dataSource, String sqlScriptPath, Boolean doParse) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimStateConfig">
            <summary>IBatisNet.Common.Utilities.StateConfig 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStateConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStateConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStateConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStateConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimStateConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer">
            <summary>IBatisNet.Common.Utilities.StringTokenizer 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.#ctor(IBatisNet.Common.Utilities.StringTokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.ConstructorString">
            <summary>设置 StringTokenizer.StringTokenizer(String str) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.ConstructorStringString">
            <summary>设置 StringTokenizer.StringTokenizer(String str, String delimiters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.ConstructorStringStringBoolean">
            <summary>设置 StringTokenizer.StringTokenizer(String str, String delimiters, Boolean returnDelimiters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.GetEnumerator">
            <summary>设置 StringTokenizer.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.StaticConstructor">
            <summary>设置 StringTokenizer.StringTokenizer() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.TokenNumberGet">
            <summary>设置 StringTokenizer.get_TokenNumber() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.AllInstances.GetEnumerator">
            <summary>设置 StringTokenizer.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimStringTokenizer.AllInstances.TokenNumberGet">
            <summary>设置 StringTokenizer.get_TokenNumber() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils">
            <summary>IBatisNet.Common.Utilities.TypeUtils 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.#ctor(IBatisNet.Common.Utilities.TypeUtils)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.Constructor">
            <summary>设置 TypeUtils.TypeUtils() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.InstantiateNullableTypeType">
            <summary>设置 TypeUtils.InstantiateNullableType(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.InstantiatePrimitiveTypeTypeCode">
            <summary>设置 TypeUtils.InstantiatePrimitiveType(TypeCode typeCode) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.ResolveTypeString">
            <summary>设置 TypeUtils.ResolveType(String typeName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.StaticConstructor">
            <summary>设置 TypeUtils.TypeUtils() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.ShimTypeUtils.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.StubHashCodeProvider">
            <summary>IBatisNet.Common.Utilities.HashCodeProvider 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubHashCodeProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubHashCodeProvider.InitializeStub">
            <summary>初始化 type StubHashCodeProvider 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubHashCodeProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubHashCodeProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubHashCodeProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.StubResources">
            <summary>IBatisNet.Common.Utilities.Resources 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubResources.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubResources.InitializeStub">
            <summary>初始化 type StubResources 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubResources.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubResources.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubResources.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.StubScriptRunner">
            <summary>IBatisNet.Common.Utilities.ScriptRunner 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubScriptRunner.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubScriptRunner.InitializeStub">
            <summary>初始化 type StubScriptRunner 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubScriptRunner.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubScriptRunner.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubScriptRunner.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer">
            <summary>IBatisNet.Common.Utilities.StringTokenizer 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer.#ctor(System.String,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer.InitializeStub">
            <summary>初始化 type StubStringTokenizer 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Fakes.StubStringTokenizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory">
            <summary>IBatisNet.Common.Utilities.Objects.AbstractFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.#ctor(IBatisNet.Common.Utilities.Objects.AbstractFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.Bind(IBatisNet.Common.Utilities.Objects.IFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.ConstructorType">
            <summary>设置 AbstractFactory.AbstractFactory(Type typeToCreate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.CreateInstanceObjectArray">
            <summary>设置 AbstractFactory.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimAbstractFactory.AllInstances.CreateInstanceObjectArray">
            <summary>设置 AbstractFactory.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.ActivatorFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.#ctor(IBatisNet.Common.Utilities.Objects.ActivatorFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.Bind(IBatisNet.Common.Utilities.Objects.IFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.ConstructorType">
            <summary>设置 ActivatorFactory.ActivatorFactory(Type typeToCreate) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.CreateInstanceObjectArray">
            <summary>设置 ActivatorFactory.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorFactory.AllInstances.CreateInstanceObjectArray">
            <summary>设置 ActivatorFactory.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory">
            <summary>IBatisNet.Common.Utilities.Objects.ActivatorObjectFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.#ctor(IBatisNet.Common.Utilities.Objects.ActivatorObjectFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.Bind(IBatisNet.Common.Utilities.Objects.IObjectFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.Constructor">
            <summary>设置 ActivatorObjectFactory.ActivatorObjectFactory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.CreateFactoryTypeTypeArray">
            <summary>设置 ActivatorObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimActivatorObjectFactory.AllInstances.CreateFactoryTypeTypeArray">
            <summary>设置 ActivatorObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes">
            <summary>IBatisNet.Common.Utilities.Objects.BoxingOpCodes 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.#ctor(IBatisNet.Common.Utilities.Objects.BoxingOpCodes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.Constructor">
            <summary>设置 BoxingOpCodes.BoxingOpCodes() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.GetOpCodeType">
            <summary>设置 BoxingOpCodes.GetOpCode(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.StaticConstructor">
            <summary>设置 BoxingOpCodes.BoxingOpCodes() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimBoxingOpCodes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory">
            <summary>IBatisNet.Common.Utilities.Objects.DelegateFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.#ctor(IBatisNet.Common.Utilities.Objects.DelegateFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.Bind(IBatisNet.Common.Utilities.Objects.IFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.ConstructorTypeTypeArray">
            <summary>设置 DelegateFactory.DelegateFactory(Type typeToCreate, Type[] argumentTypes) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.CreateInstanceObjectArray">
            <summary>设置 DelegateFactory.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.EmitArgsILILGeneratorTypeArray">
            <summary>设置 DelegateFactory.EmitArgsIL(ILGenerator il, Type[] argumentTypes) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.AllInstances.CreateInstanceObjectArray">
            <summary>设置 DelegateFactory.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateFactory.AllInstances.EmitArgsILILGeneratorTypeArray">
            <summary>设置 DelegateFactory.EmitArgsIL(ILGenerator il, Type[] argumentTypes) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory">
            <summary>IBatisNet.Common.Utilities.Objects.DelegateObjectFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.#ctor(IBatisNet.Common.Utilities.Objects.DelegateObjectFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.Bind(IBatisNet.Common.Utilities.Objects.IObjectFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.Constructor">
            <summary>设置 DelegateObjectFactory.DelegateObjectFactory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.CreateFactoryTypeTypeArray">
            <summary>设置 DelegateObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.GenerateKeyTypeObjectArray">
            <summary>设置 DelegateObjectFactory.GenerateKey(Type typeToCreate, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.StaticConstructor">
            <summary>设置 DelegateObjectFactory.DelegateObjectFactory() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.AllInstances.CreateFactoryTypeTypeArray">
            <summary>设置 DelegateObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimDelegateObjectFactory.AllInstances.GenerateKeyTypeObjectArray">
            <summary>设置 DelegateObjectFactory.GenerateKey(Type typeToCreate, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory">
            <summary>IBatisNet.Common.Utilities.Objects.EmitObjectFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.#ctor(IBatisNet.Common.Utilities.Objects.EmitObjectFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.Bind(IBatisNet.Common.Utilities.Objects.IObjectFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.Constructor">
            <summary>设置 EmitObjectFactory.EmitObjectFactory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.CreateFactoryTypeTypeArray">
            <summary>设置 EmitObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.GenerateKeyTypeObjectArray">
            <summary>设置 EmitObjectFactory.GenerateKey(Type typeToCreate, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.AllInstances.CreateFactoryTypeTypeArray">
            <summary>设置 EmitObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimEmitObjectFactory.AllInstances.GenerateKeyTypeObjectArray">
            <summary>设置 EmitObjectFactory.GenerateKey(Type typeToCreate, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder">
            <summary>IBatisNet.Common.Utilities.Objects.FactoryBuilder 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.#ctor(IBatisNet.Common.Utilities.Objects.FactoryBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.Constructor">
            <summary>设置 FactoryBuilder.FactoryBuilder() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.CreateFactoryTypeTypeArray">
            <summary>设置 FactoryBuilder.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.CreateFactoryTypeTypeTypeArray">
            <summary>设置 FactoryBuilder.CreateFactoryType(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.EmitArgsILILGeneratorTypeArray">
            <summary>设置 FactoryBuilder.EmitArgsIL(ILGenerator il, Type[] argumentTypes) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.StaticConstructor">
            <summary>设置 FactoryBuilder.FactoryBuilder() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.AllInstances.CreateFactoryTypeTypeArray">
            <summary>设置 FactoryBuilder.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.AllInstances.CreateFactoryTypeTypeTypeArray">
            <summary>设置 FactoryBuilder.CreateFactoryType(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryBuilder.AllInstances.EmitArgsILILGeneratorTypeArray">
            <summary>设置 FactoryBuilder.EmitArgsIL(ILGenerator il, Type[] argumentTypes) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter">
            <summary>IBatisNet.Common.Utilities.Objects.FactoryLogAdapter 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.#ctor(IBatisNet.Common.Utilities.Objects.FactoryLogAdapter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.Bind(IBatisNet.Common.Utilities.Objects.IFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.ConstructorTypeTypeArrayIFactory">
            <summary>设置 FactoryLogAdapter.FactoryLogAdapter(Type type, Type[] paramtersTypes, IFactory factory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.CreateInstanceObjectArray">
            <summary>设置 FactoryLogAdapter.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.GenerateLogInfoForParameterValueObjectArray">
            <summary>设置 FactoryLogAdapter.GenerateLogInfoForParameterValue(Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.GenerateParametersNameObjectArray">
            <summary>设置 FactoryLogAdapter.GenerateParametersName(Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.StaticConstructor">
            <summary>设置 FactoryLogAdapter.FactoryLogAdapter() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.AllInstances.CreateInstanceObjectArray">
            <summary>设置 FactoryLogAdapter.CreateInstance(Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.AllInstances.GenerateLogInfoForParameterValueObjectArray">
            <summary>设置 FactoryLogAdapter.GenerateLogInfoForParameterValue(Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimFactoryLogAdapter.AllInstances.GenerateParametersNameObjectArray">
            <summary>设置 FactoryLogAdapter.GenerateParametersName(Object[] arguments) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory">
            <summary>IBatisNet.Common.Utilities.Objects.ObjectFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.#ctor(IBatisNet.Common.Utilities.Objects.ObjectFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.Bind(IBatisNet.Common.Utilities.Objects.IObjectFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.ConstructorBoolean">
            <summary>设置 ObjectFactory.ObjectFactory(Boolean allowCodeGeneration) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.CreateFactoryTypeTypeArray">
            <summary>设置 ObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.StaticConstructor">
            <summary>设置 ObjectFactory.ObjectFactory() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectFactory.AllInstances.CreateFactoryTypeTypeArray">
            <summary>设置 ObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe">
            <summary>IBatisNet.Common.Utilities.Objects.ObjectProbe 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.#ctor(IBatisNet.Common.Utilities.Objects.ObjectProbe)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.Constructor">
            <summary>设置 ObjectProbe.ObjectProbe() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetArrayMemberObjectStringAccessorFactory">
            <summary>设置 ObjectProbe.GetArrayMember(Object obj, String indexedName, AccessorFactory accessorFactory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetMemberInfoForSetterTypeString">
            <summary>设置 ObjectProbe.GetMemberInfoForSetter(Type type, String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetMemberObjectStringAccessorFactory">
            <summary>设置 ObjectProbe.GetMember(Object obj, String memberName, AccessorFactory accessorFactory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetMemberTypeForGetterObjectString">
            <summary>设置 ObjectProbe.GetMemberTypeForGetter(Object obj, String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetMemberTypeForGetterTypeString">
            <summary>设置 ObjectProbe.GetMemberTypeForGetter(Type type, String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetMemberTypeForSetterObjectString">
            <summary>设置 ObjectProbe.GetMemberTypeForSetter(Object obj, String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetMemberTypeForSetterTypeString">
            <summary>设置 ObjectProbe.GetMemberTypeForSetter(Type type, String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetMemberValueObjectStringAccessorFactory">
            <summary>设置 ObjectProbe.GetMemberValue(Object obj, String memberName, AccessorFactory accessorFactory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetReadablePropertyNamesObject">
            <summary>设置 ObjectProbe.GetReadablePropertyNames(Object obj) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.GetWriteableMemberNamesObject">
            <summary>设置 ObjectProbe.GetWriteableMemberNames(Object obj) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.HasReadablePropertyObjectString">
            <summary>设置 ObjectProbe.HasReadableProperty(Object obj, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.HasWritablePropertyObjectString">
            <summary>设置 ObjectProbe.HasWritableProperty(Object obj, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.IsSimpleTypeType">
            <summary>设置 ObjectProbe.IsSimpleType(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.SetArrayMemberObjectStringObjectAccessorFactory">
            <summary>设置 ObjectProbe.SetArrayMember(Object obj, String indexedName, Object value, AccessorFactory accessorFactory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.SetMemberObjectStringObjectAccessorFactory">
            <summary>设置 ObjectProbe.SetMember(Object obj, String memberName, Object memberValue, AccessorFactory accessorFactory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.SetMemberValueObjectStringObjectIObjectFactoryAccessorFactory">
            <summary>设置 ObjectProbe.SetMemberValue(Object obj, String memberName, Object memberValue, IObjectFactory objectFactory, AccessorFactory accessorFactory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.StaticConstructor">
            <summary>设置 ObjectProbe.ObjectProbe() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimObjectProbe.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo">
            <summary>IBatisNet.Common.Utilities.Objects.ReflectionInfo 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.#ctor(IBatisNet.Common.Utilities.Objects.ReflectionInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AddMembersType">
            <summary>设置 ReflectionInfo.AddMembers(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.ClassNameGet">
            <summary>设置 ReflectionInfo.get_ClassName() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.ConstructorType">
            <summary>设置 ReflectionInfo.ReflectionInfo(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.GetGetterString">
            <summary>设置 ReflectionInfo.GetGetter(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.GetGetterTypeString">
            <summary>设置 ReflectionInfo.GetGetterType(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.GetInstanceType">
            <summary>设置 ReflectionInfo.GetInstance(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.GetReadableMemberNames">
            <summary>设置 ReflectionInfo.GetReadableMemberNames() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.GetSetterString">
            <summary>设置 ReflectionInfo.GetSetter(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.GetSetterTypeString">
            <summary>设置 ReflectionInfo.GetSetterType(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.GetWriteableMemberNames">
            <summary>设置 ReflectionInfo.GetWriteableMemberNames() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.HasReadableMemberString">
            <summary>设置 ReflectionInfo.HasReadableMember(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.HasWritableMemberString">
            <summary>设置 ReflectionInfo.HasWritableMember(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.IsKnownTypeType">
            <summary>设置 ReflectionInfo.IsKnownType(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.StaticConstructor">
            <summary>设置 ReflectionInfo.ReflectionInfo() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.AddMembersType">
            <summary>设置 ReflectionInfo.AddMembers(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.ClassNameGet">
            <summary>设置 ReflectionInfo.get_ClassName() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.GetGetterString">
            <summary>设置 ReflectionInfo.GetGetter(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.GetGetterTypeString">
            <summary>设置 ReflectionInfo.GetGetterType(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.GetReadableMemberNames">
            <summary>设置 ReflectionInfo.GetReadableMemberNames() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.GetSetterString">
            <summary>设置 ReflectionInfo.GetSetter(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.GetSetterTypeString">
            <summary>设置 ReflectionInfo.GetSetterType(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.GetWriteableMemberNames">
            <summary>设置 ReflectionInfo.GetWriteableMemberNames() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.HasReadableMemberString">
            <summary>设置 ReflectionInfo.HasReadableMember(String memberName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.ShimReflectionInfo.AllInstances.HasWritableMemberString">
            <summary>设置 ReflectionInfo.HasWritableMember(String memberName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubAbstractFactory">
            <summary>IBatisNet.Common.Utilities.Objects.AbstractFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubAbstractFactory.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubAbstractFactory.InitializeStub">
            <summary>初始化 type StubAbstractFactory 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubAbstractFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubAbstractFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubAbstractFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubActivatorObjectFactory">
            <summary>IBatisNet.Common.Utilities.Objects.ActivatorObjectFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubActivatorObjectFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubActivatorObjectFactory.InitializeStub">
            <summary>初始化 type StubActivatorObjectFactory 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubActivatorObjectFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubActivatorObjectFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubActivatorObjectFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryBuilder">
            <summary>IBatisNet.Common.Utilities.Objects.FactoryBuilder 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryBuilder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryBuilder.InitializeStub">
            <summary>初始化 type StubFactoryBuilder 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryBuilder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryBuilder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryBuilder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryLogAdapter">
            <summary>IBatisNet.Common.Utilities.Objects.FactoryLogAdapter 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryLogAdapter.#ctor(System.Type,System.Type[],IBatisNet.Common.Utilities.Objects.IFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryLogAdapter.InitializeStub">
            <summary>初始化 type StubFactoryLogAdapter 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryLogAdapter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryLogAdapter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubFactoryLogAdapter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubIFactory">
            <summary>IBatisNet.Common.Utilities.Objects.IFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubIFactory.#ctor">
            <summary>初始化 type StubIFactory 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Fakes.StubIFactory.CreateInstanceObjectArray">
            <summary>设置 IFactory.CreateInstance(Object[] parameters) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubIFactory.ibnc::IBatisNet#Common#Utilities#Objects#IFactory#CreateInstance(System.Object[])">
            <summary>设置 IFactory.CreateInstance(Object[] parameters) 的 存根</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubIObjectFactory">
            <summary>IBatisNet.Common.Utilities.Objects.IObjectFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubIObjectFactory.#ctor">
            <summary>初始化 type StubIObjectFactory 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Fakes.StubIObjectFactory.CreateFactoryTypeTypeArray">
            <summary>设置 IObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubIObjectFactory.ibnc::IBatisNet#Common#Utilities#Objects#IObjectFactory#CreateFactory(System.Type,System.Type[])">
            <summary>设置 IObjectFactory.CreateFactory(Type typeToCreate, Type[] types) 的 存根</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectFactory">
            <summary>IBatisNet.Common.Utilities.Objects.ObjectFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectFactory.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectFactory.InitializeStub">
            <summary>初始化 type StubObjectFactory 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectProbe">
            <summary>IBatisNet.Common.Utilities.Objects.ObjectProbe 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectProbe.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectProbe.InitializeStub">
            <summary>初始化 type StubObjectProbe 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectProbe.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectProbe.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Fakes.StubObjectProbe.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.AccessorFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.#ctor(IBatisNet.Common.Utilities.Objects.Members.AccessorFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.ConstructorISetAccessorFactoryIGetAccessorFactory">
            <summary>设置 AccessorFactory.AccessorFactory(ISetAccessorFactory setAccessorFactory, IGetAccessorFactory getAccessorFactory) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.GetAccessorFactoryGet">
            <summary>设置 AccessorFactory.get_GetAccessorFactory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.SetAccessorFactoryGet">
            <summary>设置 AccessorFactory.get_SetAccessorFactory() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.AllInstances.GetAccessorFactoryGet">
            <summary>设置 AccessorFactory.get_GetAccessorFactory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimAccessorFactory.AllInstances.SetAccessorFactoryGet">
            <summary>设置 AccessorFactory.get_SetAccessorFactory() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.BaseAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.BaseAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.Constructor">
            <summary>设置 BaseAccessor.BaseAccessor() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.GetNullInternalType">
            <summary>设置 BaseAccessor.GetNullInternal(Type type) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.StaticConstructor">
            <summary>设置 BaseAccessor.BaseAccessor() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimBaseAccessor.AllInstances.GetNullInternalType">
            <summary>设置 BaseAccessor.GetNullInternal(Type type) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.DelegateFieldGetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.DelegateFieldGetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.ConstructorTypeString">
            <summary>设置 DelegateFieldGetAccessor.DelegateFieldGetAccessor(Type targetObjectType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.GetObject">
            <summary>设置 DelegateFieldGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.MemberTypeGet">
            <summary>设置 DelegateFieldGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.NameGet">
            <summary>设置 DelegateFieldGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.AllInstances.GetObject">
            <summary>设置 DelegateFieldGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 DelegateFieldGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldGetAccessor.AllInstances.NameGet">
            <summary>设置 DelegateFieldGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.DelegateFieldSetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.DelegateFieldSetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.ConstructorTypeString">
            <summary>设置 DelegateFieldSetAccessor.DelegateFieldSetAccessor(Type targetObjectType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.MemberTypeGet">
            <summary>设置 DelegateFieldSetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.NameGet">
            <summary>设置 DelegateFieldSetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.SetObjectObject">
            <summary>设置 DelegateFieldSetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 DelegateFieldSetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.AllInstances.NameGet">
            <summary>设置 DelegateFieldSetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegateFieldSetAccessor.AllInstances.SetObjectObject">
            <summary>设置 DelegateFieldSetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.DelegatePropertyGetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.DelegatePropertyGetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.ConstructorTypeString">
            <summary>设置 DelegatePropertyGetAccessor.DelegatePropertyGetAccessor(Type targetObjectType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.GetObject">
            <summary>设置 DelegatePropertyGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.MemberTypeGet">
            <summary>设置 DelegatePropertyGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.NameGet">
            <summary>设置 DelegatePropertyGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.AllInstances.GetObject">
            <summary>设置 DelegatePropertyGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 DelegatePropertyGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertyGetAccessor.AllInstances.NameGet">
            <summary>设置 DelegatePropertyGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.DelegatePropertySetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.DelegatePropertySetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.ConstructorTypeString">
            <summary>设置 DelegatePropertySetAccessor.DelegatePropertySetAccessor(Type targetObjectType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.MemberTypeGet">
            <summary>设置 DelegatePropertySetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.NameGet">
            <summary>设置 DelegatePropertySetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.SetObjectObject">
            <summary>设置 DelegatePropertySetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 DelegatePropertySetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.AllInstances.NameGet">
            <summary>设置 DelegatePropertySetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimDelegatePropertySetAccessor.AllInstances.SetObjectObject">
            <summary>设置 DelegatePropertySetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.EmitFieldGetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.EmitFieldGetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.ConstructorTypeStringAssemblyBuilderModuleBuilder">
            <summary>设置 EmitFieldGetAccessor.EmitFieldGetAccessor(Type targetObjectType, String fieldName, AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitFieldGetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.EmitTypeModuleBuilder">
            <summary>设置 EmitFieldGetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.GetObject">
            <summary>设置 EmitFieldGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.MemberTypeGet">
            <summary>设置 EmitFieldGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.NameGet">
            <summary>设置 EmitFieldGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.AllInstances.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitFieldGetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.AllInstances.EmitTypeModuleBuilder">
            <summary>设置 EmitFieldGetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.AllInstances.GetObject">
            <summary>设置 EmitFieldGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 EmitFieldGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldGetAccessor.AllInstances.NameGet">
            <summary>设置 EmitFieldGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.EmitFieldSetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.EmitFieldSetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.ConstructorTypeStringAssemblyBuilderModuleBuilder">
            <summary>设置 EmitFieldSetAccessor.EmitFieldSetAccessor(Type targetObjectType, String fieldName, AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitFieldSetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.EmitTypeModuleBuilder">
            <summary>设置 EmitFieldSetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.MemberTypeGet">
            <summary>设置 EmitFieldSetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.NameGet">
            <summary>设置 EmitFieldSetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.SetObjectObject">
            <summary>设置 EmitFieldSetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.AllInstances.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitFieldSetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.AllInstances.EmitTypeModuleBuilder">
            <summary>设置 EmitFieldSetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 EmitFieldSetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.AllInstances.NameGet">
            <summary>设置 EmitFieldSetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitFieldSetAccessor.AllInstances.SetObjectObject">
            <summary>设置 EmitFieldSetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.EmitPropertyGetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.EmitPropertyGetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.ConstructorTypeStringAssemblyBuilderModuleBuilder">
            <summary>设置 EmitPropertyGetAccessor.EmitPropertyGetAccessor(Type targetObjectType, String propertyName, AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitPropertyGetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.EmitTypeModuleBuilder">
            <summary>设置 EmitPropertyGetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.GetObject">
            <summary>设置 EmitPropertyGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.MemberTypeGet">
            <summary>设置 EmitPropertyGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.NameGet">
            <summary>设置 EmitPropertyGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.AllInstances.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitPropertyGetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.AllInstances.EmitTypeModuleBuilder">
            <summary>设置 EmitPropertyGetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.AllInstances.GetObject">
            <summary>设置 EmitPropertyGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 EmitPropertyGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertyGetAccessor.AllInstances.NameGet">
            <summary>设置 EmitPropertyGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.EmitPropertySetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.EmitPropertySetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.ConstructorTypeStringAssemblyBuilderModuleBuilder">
            <summary>设置 EmitPropertySetAccessor.EmitPropertySetAccessor(Type targetObjectType, String propertyName, AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitPropertySetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.EmitTypeModuleBuilder">
            <summary>设置 EmitPropertySetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.MemberTypeGet">
            <summary>设置 EmitPropertySetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.NameGet">
            <summary>设置 EmitPropertySetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.SetObjectObject">
            <summary>设置 EmitPropertySetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.AllInstances.EmitILAssemblyBuilderModuleBuilder">
            <summary>设置 EmitPropertySetAccessor.EmitIL(AssemblyBuilder assemblyBuilder, ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.AllInstances.EmitTypeModuleBuilder">
            <summary>设置 EmitPropertySetAccessor.EmitType(ModuleBuilder moduleBuilder) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 EmitPropertySetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.AllInstances.NameGet">
            <summary>设置 EmitPropertySetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimEmitPropertySetAccessor.AllInstances.SetObjectObject">
            <summary>设置 EmitPropertySetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.GetAccessorFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.#ctor(IBatisNet.Common.Utilities.Objects.Members.GetAccessorFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.Bind(IBatisNet.Common.Utilities.Objects.Members.IGetAccessorFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.ConstructorBoolean">
            <summary>设置 GetAccessorFactory.GetAccessorFactory(Boolean allowCodeGeneration) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.CreateDynamicFieldGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateDynamicFieldGetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.CreateDynamicPropertyGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateDynamicPropertyGetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.CreateFieldAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateFieldAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.CreateGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateGetAccessor(Type targetType, String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.CreatePropertyAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreatePropertyAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.CreateReflectionFieldGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateReflectionFieldGetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.CreateReflectionPropertyGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateReflectionPropertyGetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances.CreateDynamicFieldGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateDynamicFieldGetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances.CreateDynamicPropertyGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateDynamicPropertyGetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances.CreateFieldAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateFieldAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances.CreateGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateGetAccessor(Type targetType, String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances.CreatePropertyAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreatePropertyAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances.CreateReflectionFieldGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateReflectionFieldGetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimGetAccessorFactory.AllInstances.CreateReflectionPropertyGetAccessorTypeString">
            <summary>设置 GetAccessorFactory.CreateReflectionPropertyGetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.ReflectionFieldGetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.ReflectionFieldGetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.ConstructorTypeString">
            <summary>设置 ReflectionFieldGetAccessor.ReflectionFieldGetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.GetObject">
            <summary>设置 ReflectionFieldGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.MemberTypeGet">
            <summary>设置 ReflectionFieldGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.NameGet">
            <summary>设置 ReflectionFieldGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.AllInstances.GetObject">
            <summary>设置 ReflectionFieldGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 ReflectionFieldGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldGetAccessor.AllInstances.NameGet">
            <summary>设置 ReflectionFieldGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.ReflectionFieldSetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.ReflectionFieldSetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.ConstructorTypeString">
            <summary>设置 ReflectionFieldSetAccessor.ReflectionFieldSetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.MemberTypeGet">
            <summary>设置 ReflectionFieldSetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.NameGet">
            <summary>设置 ReflectionFieldSetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.SetObjectObject">
            <summary>设置 ReflectionFieldSetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 ReflectionFieldSetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.AllInstances.NameGet">
            <summary>设置 ReflectionFieldSetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionFieldSetAccessor.AllInstances.SetObjectObject">
            <summary>设置 ReflectionFieldSetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.ReflectionPropertyGetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.ReflectionPropertyGetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IGetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.ConstructorTypeString">
            <summary>设置 ReflectionPropertyGetAccessor.ReflectionPropertyGetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.GetObject">
            <summary>设置 ReflectionPropertyGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.MemberTypeGet">
            <summary>设置 ReflectionPropertyGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.NameGet">
            <summary>设置 ReflectionPropertyGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.AllInstances.GetObject">
            <summary>设置 ReflectionPropertyGetAccessor.Get(Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 ReflectionPropertyGetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertyGetAccessor.AllInstances.NameGet">
            <summary>设置 ReflectionPropertyGetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.ReflectionPropertySetAccessor 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.#ctor(IBatisNet.Common.Utilities.Objects.Members.ReflectionPropertySetAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.IAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.Bind(IBatisNet.Common.Utilities.Objects.Members.ISetAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.ConstructorTypeString">
            <summary>设置 ReflectionPropertySetAccessor.ReflectionPropertySetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.MemberTypeGet">
            <summary>设置 ReflectionPropertySetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.NameGet">
            <summary>设置 ReflectionPropertySetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.SetObjectObject">
            <summary>设置 ReflectionPropertySetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.AllInstances.MemberTypeGet">
            <summary>设置 ReflectionPropertySetAccessor.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.AllInstances.NameGet">
            <summary>设置 ReflectionPropertySetAccessor.get_Name() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimReflectionPropertySetAccessor.AllInstances.SetObjectObject">
            <summary>设置 ReflectionPropertySetAccessor.Set(Object target, Object value) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.SetAccessorFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.#ctor(IBatisNet.Common.Utilities.Objects.Members.SetAccessorFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.Bind(IBatisNet.Common.Utilities.Objects.Members.ISetAccessorFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.ConstructorBoolean">
            <summary>设置 SetAccessorFactory.SetAccessorFactory(Boolean allowCodeGeneration) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.CreateDynamicFieldSetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateDynamicFieldSetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.CreateDynamicPropertySetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateDynamicPropertySetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.CreateFieldAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateFieldAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.CreatePropertyAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreatePropertyAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.CreateReflectionFieldSetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateReflectionFieldSetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.CreateReflectionPropertySetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateReflectionPropertySetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.CreateSetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateSetAccessor(Type targetType, String name) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances.CreateDynamicFieldSetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateDynamicFieldSetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances.CreateDynamicPropertySetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateDynamicPropertySetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances.CreateFieldAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateFieldAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances.CreatePropertyAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreatePropertyAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances.CreateReflectionFieldSetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateReflectionFieldSetAccessor(Type targetType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances.CreateReflectionPropertySetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateReflectionPropertySetAccessor(Type targetType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.ShimSetAccessorFactory.AllInstances.CreateSetAccessorTypeString">
            <summary>设置 SetAccessorFactory.CreateSetAccessor(Type targetType, String name) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.AccessorFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubAccessorFactory.#ctor(IBatisNet.Common.Utilities.Objects.Members.ISetAccessorFactory,IBatisNet.Common.Utilities.Objects.Members.IGetAccessorFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubAccessorFactory.InitializeStub">
            <summary>初始化 type StubAccessorFactory 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubAccessorFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubAccessorFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubAccessorFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubBaseAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.BaseAccessor 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubBaseAccessor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubBaseAccessor.InitializeStub">
            <summary>初始化 type StubBaseAccessor 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubBaseAccessor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubBaseAccessor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubBaseAccessor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubGetAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.GetAccessorFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubGetAccessorFactory.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubGetAccessorFactory.InitializeStub">
            <summary>初始化 type StubGetAccessorFactory 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubGetAccessorFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubGetAccessorFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubGetAccessorFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.IAccessor 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIAccessor.#ctor">
            <summary>初始化 type StubIAccessor 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIAccessor.MemberTypeGet">
            <summary>设置 IAccessor.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIAccessor.NameGet">
            <summary>设置 IAccessor.get_Name() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#IAccessor#MemberType">
            <summary>设置 IAccessor.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#IAccessor#Name">
            <summary>设置 IAccessor.get_Name() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGet">
            <summary>IBatisNet.Common.Utilities.Objects.Members.IGet 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGet.#ctor">
            <summary>初始化 type StubIGet 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGet.GetObject">
            <summary>设置 IGet.Get(Object target) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGet.ibnc::IBatisNet#Common#Utilities#Objects#Members#IGet#Get(System.Object)">
            <summary>设置 IGet.Get(Object target) 的 存根</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.IGetAccessor 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor.#ctor">
            <summary>初始化 type StubIGetAccessor 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor.GetObject">
            <summary>设置 IGet.Get(Object target) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#IGet#Get(System.Object)">
            <summary>设置 IGet.Get(Object target) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor.MemberTypeGet">
            <summary>设置 IAccessor.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor.NameGet">
            <summary>设置 IAccessor.get_Name() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#IAccessor#MemberType">
            <summary>设置 IAccessor.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#IAccessor#Name">
            <summary>设置 IAccessor.get_Name() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.IGetAccessorFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessorFactory.#ctor">
            <summary>初始化 type StubIGetAccessorFactory 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessorFactory.CreateGetAccessorTypeString">
            <summary>设置 IGetAccessorFactory.CreateGetAccessor(Type targetType, String name) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubIGetAccessorFactory.ibnc::IBatisNet#Common#Utilities#Objects#Members#IGetAccessorFactory#CreateGetAccessor(System.Type,System.String)">
            <summary>设置 IGetAccessorFactory.CreateGetAccessor(Type targetType, String name) 的 存根</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISet">
            <summary>IBatisNet.Common.Utilities.Objects.Members.ISet 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISet.#ctor">
            <summary>初始化 type StubISet 的新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISet.ibnc::IBatisNet#Common#Utilities#Objects#Members#ISet#Set(System.Object,System.Object)">
            <summary>设置 ISet.Set(Object target, Object value) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISet.SetObjectObject">
            <summary>设置 ISet.Set(Object target, Object value) 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor">
            <summary>IBatisNet.Common.Utilities.Objects.Members.ISetAccessor 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor.#ctor">
            <summary>初始化 type StubISetAccessor 的新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#ISet#Set(System.Object,System.Object)">
            <summary>设置 ISet.Set(Object target, Object value) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor.MemberTypeGet">
            <summary>设置 IAccessor.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor.NameGet">
            <summary>设置 IAccessor.get_Name() 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor.SetObjectObject">
            <summary>设置 ISet.Set(Object target, Object value) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#IAccessor#MemberType">
            <summary>设置 IAccessor.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessor.ibnc::IBatisNet#Common#Utilities#Objects#Members#IAccessor#Name">
            <summary>设置 IAccessor.get_Name() 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.ISetAccessorFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessorFactory.#ctor">
            <summary>初始化 type StubISetAccessorFactory 的新实例</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessorFactory.CreateSetAccessorTypeString">
            <summary>设置 ISetAccessorFactory.CreateSetAccessor(Type targetType, String name) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubISetAccessorFactory.ibnc::IBatisNet#Common#Utilities#Objects#Members#ISetAccessorFactory#CreateSetAccessor(System.Type,System.String)">
            <summary>设置 ISetAccessorFactory.CreateSetAccessor(Type targetType, String name) 的 存根</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubSetAccessorFactory">
            <summary>IBatisNet.Common.Utilities.Objects.Members.SetAccessorFactory 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubSetAccessorFactory.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubSetAccessorFactory.InitializeStub">
            <summary>初始化 type StubSetAccessorFactory 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubSetAccessorFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubSetAccessorFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Objects.Members.Fakes.StubSetAccessorFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator">
            <summary>IBatisNet.Common.Utilities.Proxy.CachedProxyGenerator 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.#ctor(IBatisNet.Common.Utilities.Proxy.CachedProxyGenerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.Constructor">
            <summary>设置 CachedProxyGenerator.CachedProxyGenerator() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.CreateClassProxyTypeIInterceptorObjectArray">
            <summary>设置 CachedProxyGenerator.CreateClassProxy(Type targetType, IInterceptor interceptor, Object[] argumentsForConstructor) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.CreateProxyTypeArrayIInterceptorObject">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type[] interfaces, IInterceptor interceptor, Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.CreateProxyTypeIInterceptorObject">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type theInterface, IInterceptor interceptor, Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.StaticConstructor">
            <summary>设置 CachedProxyGenerator.CachedProxyGenerator() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.AllInstances.CreateClassProxyTypeIInterceptorObjectArray">
            <summary>设置 CachedProxyGenerator.CreateClassProxy(Type targetType, IInterceptor interceptor, Object[] argumentsForConstructor) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.AllInstances.CreateProxyTypeArrayIInterceptorObject">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type[] interfaces, IInterceptor interceptor, Object target) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimCachedProxyGenerator.AllInstances.CreateProxyTypeIInterceptorObject">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type theInterface, IInterceptor interceptor, Object target) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory">
            <summary>IBatisNet.Common.Utilities.Proxy.ProxyGeneratorFactory 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.#ctor(IBatisNet.Common.Utilities.Proxy.ProxyGeneratorFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.Constructor">
            <summary>设置 ProxyGeneratorFactory.ProxyGeneratorFactory() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.GetProxyGenerator">
            <summary>设置 ProxyGeneratorFactory.GetProxyGenerator() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.StaticConstructor">
            <summary>设置 ProxyGeneratorFactory.ProxyGeneratorFactory() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Proxy.Fakes.ShimProxyGeneratorFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator">
            <summary>IBatisNet.Common.Utilities.Proxy.CachedProxyGenerator 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxy(System.Type,Castle.DynamicProxy.IInterceptor,System.Object[])">
            <summary>设置 CachedProxyGenerator.CreateClassProxy(Type targetType, IInterceptor interceptor, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxy(System.Type,Castle.DynamicProxy.IInterceptor,System.Boolean,System.Object[])">
            <summary>设置 ProxyGenerator.CreateClassProxy(Type baseClass, IInterceptor interceptor, Boolean checkAbstract, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxy(System.Type,System.Type[],Castle.DynamicProxy.IInterceptor,System.Object[])">
            <summary>设置 ProxyGenerator.CreateClassProxy(Type baseClass, Type[] interfaces, IInterceptor interceptor, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxy(System.Type,System.Type[],Castle.DynamicProxy.IInterceptor,System.Boolean,System.Object[])">
            <summary>设置 ProxyGenerator.CreateClassProxy(Type baseClass, Type[] interfaces, IInterceptor interceptor, Boolean checkAbstract, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxyInstance(System.Type,Castle.DynamicProxy.IInterceptor,System.Object[])">
            <summary>设置 ProxyGenerator.CreateClassProxyInstance(Type type, IInterceptor interceptor, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxyInstanceTypeIInterceptorObjectArray">
            <summary>设置 ProxyGenerator.CreateClassProxyInstance(Type type, IInterceptor interceptor, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxyTypeIInterceptorBooleanObjectArray">
            <summary>设置 ProxyGenerator.CreateClassProxy(Type baseClass, IInterceptor interceptor, Boolean checkAbstract, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxyTypeIInterceptorObjectArray">
            <summary>设置 CachedProxyGenerator.CreateClassProxy(Type targetType, IInterceptor interceptor, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxyTypeTypeArrayIInterceptorBooleanObjectArray">
            <summary>设置 ProxyGenerator.CreateClassProxy(Type baseClass, Type[] interfaces, IInterceptor interceptor, Boolean checkAbstract, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateClassProxyTypeTypeArrayIInterceptorObjectArray">
            <summary>设置 ProxyGenerator.CreateClassProxy(Type baseClass, Type[] interfaces, IInterceptor interceptor, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxy(System.Type,Castle.DynamicProxy.IInterceptor,Castle.DynamicProxy.GeneratorContext,System.Object[])">
            <summary>设置 ProxyGenerator.CreateCustomClassProxy(Type baseClass, IInterceptor interceptor, GeneratorContext context, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxy(System.Type,Castle.DynamicProxy.IInterceptor,Castle.DynamicProxy.GeneratorContext,System.Boolean,System.Object[])">
            <summary>设置 ProxyGenerator.CreateCustomClassProxy(Type baseClass, IInterceptor interceptor, GeneratorContext context, Boolean checkAbstract, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxyInstance(System.Type,Castle.DynamicProxy.IInterceptor,Castle.DynamicProxy.GeneratorContext,System.Object[])">
            <summary>设置 ProxyGenerator.CreateCustomClassProxyInstance(Type type, IInterceptor interceptor, GeneratorContext context, Object[] argumentsForConstructor) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxyInstance(System.Type,Castle.DynamicProxy.IInterceptor,Castle.DynamicProxy.GeneratorContext,System.Object)">
            <summary>设置 ProxyGenerator.CreateCustomClassProxyInstance(Type type, IInterceptor interceptor, GeneratorContext context, Object target) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxyInstanceTypeIInterceptorGeneratorContextObject">
            <summary>设置 ProxyGenerator.CreateCustomClassProxyInstance(Type type, IInterceptor interceptor, GeneratorContext context, Object target) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxyInstanceTypeIInterceptorGeneratorContextObjectArray">
            <summary>设置 ProxyGenerator.CreateCustomClassProxyInstance(Type type, IInterceptor interceptor, GeneratorContext context, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxyTypeIInterceptorGeneratorContextBooleanObjectArray">
            <summary>设置 ProxyGenerator.CreateCustomClassProxy(Type baseClass, IInterceptor interceptor, GeneratorContext context, Boolean checkAbstract, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomClassProxyTypeIInterceptorGeneratorContextObjectArray">
            <summary>设置 ProxyGenerator.CreateCustomClassProxy(Type baseClass, IInterceptor interceptor, GeneratorContext context, Object[] argumentsForConstructor) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomProxy(System.Type[],Castle.DynamicProxy.IInterceptor,System.Object,Castle.DynamicProxy.GeneratorContext)">
            <summary>设置 ProxyGenerator.CreateCustomProxy(Type[] interfaces, IInterceptor interceptor, Object target, GeneratorContext context) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomProxy(System.Type,Castle.DynamicProxy.IInterceptor,System.Object,Castle.DynamicProxy.GeneratorContext)">
            <summary>设置 ProxyGenerator.CreateCustomProxy(Type theInterface, IInterceptor interceptor, Object target, GeneratorContext context) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomProxyInstance(System.Type,Castle.DynamicProxy.IInterceptor,System.Object,Castle.DynamicProxy.GeneratorContext)">
            <summary>设置 ProxyGenerator.CreateCustomProxyInstance(Type type, IInterceptor interceptor, Object target, GeneratorContext context) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomProxyInstanceTypeIInterceptorObjectGeneratorContext">
            <summary>设置 ProxyGenerator.CreateCustomProxyInstance(Type type, IInterceptor interceptor, Object target, GeneratorContext context) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomProxyTypeArrayIInterceptorObjectGeneratorContext">
            <summary>设置 ProxyGenerator.CreateCustomProxy(Type[] interfaces, IInterceptor interceptor, Object target, GeneratorContext context) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateCustomProxyTypeIInterceptorObjectGeneratorContext">
            <summary>设置 ProxyGenerator.CreateCustomProxy(Type theInterface, IInterceptor interceptor, Object target, GeneratorContext context) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateProxy(System.Type,Castle.DynamicProxy.IInterceptor,System.Object)">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type theInterface, IInterceptor interceptor, Object target) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateProxy(System.Type[],Castle.DynamicProxy.IInterceptor,System.Object)">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type[] interfaces, IInterceptor interceptor, Object target) 的 存根</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateProxyInstance(System.Type,Castle.DynamicProxy.IInterceptor,System.Object)">
            <summary>设置 ProxyGenerator.CreateProxyInstance(Type type, IInterceptor interceptor, Object target) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateProxyInstanceTypeIInterceptorObject">
            <summary>设置 ProxyGenerator.CreateProxyInstance(Type type, IInterceptor interceptor, Object target) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateProxyTypeArrayIInterceptorObject">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type[] interfaces, IInterceptor interceptor, Object target) 的 stub</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CreateProxyTypeIInterceptorObject">
            <summary>设置 CachedProxyGenerator.CreateProxy(Type theInterface, IInterceptor interceptor, Object target) 的 stub</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.InitializeStub">
            <summary>初始化 type StubCachedProxyGenerator 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.Proxy.Fakes.StubCachedProxyGenerator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.Proxy.Fakes.StubIProxyGenerator">
            <summary>IBatisNet.Common.Utilities.Proxy.IProxyGenerator 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.Proxy.Fakes.StubIProxyGenerator.#ctor">
            <summary>初始化 type StubIProxyGenerator 的新实例</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver">
            <summary>IBatisNet.Common.Utilities.TypesResolver.CachedTypeResolver 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.#ctor(IBatisNet.Common.Utilities.TypesResolver.CachedTypeResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.Bind(IBatisNet.Common.Utilities.TypesResolver.ITypeResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.ConstructorITypeResolver">
            <summary>设置 CachedTypeResolver.CachedTypeResolver(ITypeResolver typeResolver) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.ResolveString">
            <summary>设置 CachedTypeResolver.Resolve(String typeName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimCachedTypeResolver.AllInstances.ResolveString">
            <summary>设置 CachedTypeResolver.Resolve(String typeName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry">
            <summary>IBatisNet.Common.Utilities.TypesResolver.TypeRegistry 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.#ctor(IBatisNet.Common.Utilities.TypesResolver.TypeRegistry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.Constructor">
            <summary>设置 TypeRegistry.TypeRegistry() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.ResolveTypeString">
            <summary>设置 TypeRegistry.ResolveType(String alias) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.StaticConstructor">
            <summary>设置 TypeRegistry.TypeRegistry() 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeRegistry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver">
            <summary>IBatisNet.Common.Utilities.TypesResolver.TypeResolver 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.#ctor(IBatisNet.Common.Utilities.TypesResolver.TypeResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.Bind(IBatisNet.Common.Utilities.TypesResolver.ITypeResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.BuildTypeLoadExceptionString">
            <summary>设置 TypeResolver.BuildTypeLoadException(String typeName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.BuildTypeLoadExceptionStringException">
            <summary>设置 TypeResolver.BuildTypeLoadException(String typeName, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.Constructor">
            <summary>设置 TypeResolver.TypeResolver() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.ResolveGenericTypeString">
            <summary>设置 TypeResolver.ResolveGenericType(String typeName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.ResolveString">
            <summary>设置 TypeResolver.Resolve(String typeName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.ResolveTypeString">
            <summary>设置 TypeResolver.ResolveType(String typeName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.AllInstances.ResolveGenericTypeString">
            <summary>设置 TypeResolver.ResolveGenericType(String typeName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.AllInstances.ResolveString">
            <summary>设置 TypeResolver.Resolve(String typeName) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.ShimTypeResolver.AllInstances.ResolveTypeString">
            <summary>设置 TypeResolver.ResolveType(String typeName) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubCachedTypeResolver">
            <summary>IBatisNet.Common.Utilities.TypesResolver.CachedTypeResolver 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubCachedTypeResolver.#ctor(IBatisNet.Common.Utilities.TypesResolver.ITypeResolver)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubCachedTypeResolver.InitializeStub">
            <summary>初始化 type StubCachedTypeResolver 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubCachedTypeResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubCachedTypeResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubCachedTypeResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubITypeResolver">
            <summary>IBatisNet.Common.Utilities.TypesResolver.ITypeResolver 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubITypeResolver.#ctor">
            <summary>初始化 type StubITypeResolver 的新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubITypeResolver.ibnc::IBatisNet#Common#Utilities#TypesResolver#ITypeResolver#Resolve(System.String)">
            <summary>设置 ITypeResolver.Resolve(String typeName) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubITypeResolver.ResolveString">
            <summary>设置 ITypeResolver.Resolve(String typeName) 的 stub</summary>
        </member>
        <member name="T:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver">
            <summary>IBatisNet.Common.Utilities.TypesResolver.TypeResolver 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver.InitializeStub">
            <summary>初始化 type StubTypeResolver 的新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver.Resolve(System.String)">
            <summary>设置 TypeResolver.Resolve(String typeName) 的 存根</summary>
        </member>
        <member name="F:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver.ResolveString">
            <summary>设置 TypeResolver.Resolve(String typeName) 的 stub</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Utilities.TypesResolver.Fakes.StubTypeResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:IBatisNet.Common.Xml.Fakes.ShimNodeUtils">
            <summary>IBatisNet.Common.Xml.NodeUtils 的填充码类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.#ctor(IBatisNet.Common.Xml.NodeUtils)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.Constructor">
            <summary>设置 NodeUtils.NodeUtils() 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.GetBooleanAttributeNameValueCollectionStringBoolean">
            <summary>设置 NodeUtils.GetBooleanAttribute(NameValueCollection attributes, String name, Boolean def) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.GetByteAttributeNameValueCollectionStringByte">
            <summary>设置 NodeUtils.GetByteAttribute(NameValueCollection attributes, String name, Byte def) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.GetIntAttributeNameValueCollectionStringInt32">
            <summary>设置 NodeUtils.GetIntAttribute(NameValueCollection attributes, String name, Int32 def) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.GetStringAttributeNameValueCollectionString">
            <summary>设置 NodeUtils.GetStringAttribute(NameValueCollection attributes, String name) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.GetStringAttributeNameValueCollectionStringString">
            <summary>设置 NodeUtils.GetStringAttribute(NameValueCollection attributes, String name, String def) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.ParseAttributesXmlNode">
            <summary>设置 NodeUtils.ParseAttributes(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.ParseAttributesXmlNodeNameValueCollection">
            <summary>设置 NodeUtils.ParseAttributes(XmlNode node, NameValueCollection variables) 的 填充码</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.ParsePropertyTokensStringNameValueCollection">
            <summary>设置 NodeUtils.ParsePropertyTokens(String str, NameValueCollection properties) 的 填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Xml.Fakes.ShimNodeUtils.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:IBatisNet.Common.Xml.Fakes.StubNodeUtils">
            <summary>IBatisNet.Common.Xml.NodeUtils 的存根类型</summary>
        </member>
        <member name="M:IBatisNet.Common.Xml.Fakes.StubNodeUtils.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:IBatisNet.Common.Xml.Fakes.StubNodeUtils.InitializeStub">
            <summary>初始化 type StubNodeUtils 的新实例</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.StubNodeUtils.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.StubNodeUtils.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:IBatisNet.Common.Xml.Fakes.StubNodeUtils.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
